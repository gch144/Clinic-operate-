{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gaura\\\\Music\\\\clinic_frontend\\\\src\\\\components\\\\admin\\\\DoctorRegistration.js\",\n  _s = $RefreshSig$();\n// AdminDashboard.js\n\nimport { adminApi, setAuthToken } from '../../api'; // Update the path\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst specialties = [{\n  value: 0,\n  label: 'None'\n}, {\n  value: 1,\n  label: 'Home'\n}, {\n  value: 2,\n  label: 'ENT'\n}, {\n  value: 3,\n  label: 'Dermatologist'\n}, {\n  value: 4,\n  label: 'Ophtalmologist'\n}, {\n  value: 5,\n  label: 'Neurologist'\n}, {\n  value: 6,\n  label: 'Orthopedist'\n}, {\n  value: 7,\n  label: 'Pediatrician'\n}];\nconst DoctorRegistration = () => {\n  _s();\n  const [doctorData, setDoctorData] = useState({\n    name: '',\n    username: '',\n    email: '',\n    password: '',\n    passwordConfirm: '',\n    specialty: 0\n  });\n  const handleDoctorRegistration = async () => {\n    // Set JWT token in headers before making any admin API requests\n    setAuthToken();\n    try {\n      // Use the registerDoctor API function to register a doctor\n      const response = await adminApi.registerDoctor(doctorData);\n\n      // Handle the response as needed\n      console.log('Doctor registration successful:', response.data);\n\n      // You can reset the form or take any other actions after successful registration\n      setDoctorData({\n        name: '',\n        username: '',\n        email: '',\n        password: '',\n        passwordConfirm: '',\n        specialty: 0\n      });\n    } catch (error) {\n      console.error('Error registering doctor:', error);\n      // Handle the error (display an error message, etc.)\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Doctor Registration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: doctorData.name,\n        onChange: e => setDoctorData({\n          ...doctorData,\n          name: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Username:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: doctorData.username,\n        onChange: e => setDoctorData({\n          ...doctorData,\n          username: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: doctorData.email,\n        onChange: e => setDoctorData({\n          ...doctorData,\n          email: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: doctorData.password,\n        onChange: e => setDoctorData({\n          ...doctorData,\n          password: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Confirm Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: doctorData.passwordConfirm,\n        onChange: e => setDoctorData({\n          ...doctorData,\n          passwordConfirm: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Specialty:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: doctorData.specialty,\n        onChange: e => setDoctorData({\n          ...doctorData,\n          specialty: parseInt(e.target.value, 10)\n        }),\n        children: specialties.map(specialty => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: specialty.value,\n          children: specialty.label\n        }, specialty.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleDoctorRegistration,\n        children: \"Register Doctor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(DoctorRegistration, \"kHVs2yA1nf18Etgu+hVu2EEg/aY=\");\n_c = DoctorRegistration;\nexport default DoctorRegistration;\nvar _c;\n$RefreshReg$(_c, \"DoctorRegistration\");","map":{"version":3,"names":["adminApi","setAuthToken","React","useState","jsxDEV","_jsxDEV","specialties","value","label","DoctorRegistration","_s","doctorData","setDoctorData","name","username","email","password","passwordConfirm","specialty","handleDoctorRegistration","response","registerDoctor","console","log","data","error","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","parseInt","map","onClick","_c","$RefreshReg$"],"sources":["C:/Users/gaura/Music/clinic_frontend/src/components/admin/DoctorRegistration.js"],"sourcesContent":["// AdminDashboard.js\r\n\r\nimport { adminApi, setAuthToken } from '../../api'; // Update the path\r\nimport React, { useState } from 'react';\r\n\r\nconst specialties = [\r\n  { value: 0, label: 'None' },\r\n  { value: 1, label: 'Home' },\r\n  { value: 2, label: 'ENT' },\r\n  { value: 3, label: 'Dermatologist' },\r\n  { value: 4, label: 'Ophtalmologist' },\r\n  { value: 5, label: 'Neurologist' },\r\n  { value: 6, label: 'Orthopedist' },\r\n  { value: 7, label: 'Pediatrician' },\r\n];\r\n\r\nconst DoctorRegistration = () => {\r\n  const [doctorData, setDoctorData] = useState({\r\n    name: '',\r\n    username: '',\r\n    email: '',\r\n    password: '',\r\n    passwordConfirm: '',\r\n    specialty: 0,\r\n  });\r\n\r\n  const handleDoctorRegistration = async () => {\r\n    // Set JWT token in headers before making any admin API requests\r\n    setAuthToken();\r\n\r\n    try {\r\n      // Use the registerDoctor API function to register a doctor\r\n      const response = await adminApi.registerDoctor(doctorData);\r\n\r\n      // Handle the response as needed\r\n      console.log('Doctor registration successful:', response.data);\r\n\r\n      // You can reset the form or take any other actions after successful registration\r\n      setDoctorData({\r\n        name: '',\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n        passwordConfirm: '',\r\n        specialty: 0,\r\n      });\r\n    } catch (error) {\r\n      console.error('Error registering doctor:', error);\r\n      // Handle the error (display an error message, etc.)\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Doctor Registration</h2>\r\n      {/* Doctor Registration Form */}\r\n      <form>\r\n        <label>Name:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={doctorData.name}\r\n          onChange={(e) => setDoctorData({ ...doctorData, name: e.target.value })}\r\n        />\r\n        <br />\r\n\r\n        <label>Username:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={doctorData.username}\r\n          onChange={(e) => setDoctorData({ ...doctorData, username: e.target.value })}\r\n        />\r\n        <br />\r\n\r\n        <label>Email:</label>\r\n        <input\r\n          type=\"email\"\r\n          value={doctorData.email}\r\n          onChange={(e) => setDoctorData({ ...doctorData, email: e.target.value })}\r\n        />\r\n        <br />\r\n\r\n        <label>Password:</label>\r\n        <input\r\n          type=\"password\"\r\n          value={doctorData.password}\r\n          onChange={(e) => setDoctorData({ ...doctorData, password: e.target.value })}\r\n        />\r\n        <br />\r\n\r\n        <label>Confirm Password:</label>\r\n        <input\r\n          type=\"password\"\r\n          value={doctorData.passwordConfirm}\r\n          onChange={(e) => setDoctorData({ ...doctorData, passwordConfirm: e.target.value })}\r\n        />\r\n        <br />\r\n\r\n        <label>Specialty:</label>\r\n        <select\r\n          value={doctorData.specialty}\r\n          onChange={(e) => setDoctorData({ ...doctorData, specialty: parseInt(e.target.value, 10) })}\r\n        >\r\n          {specialties.map((specialty) => (\r\n            <option key={specialty.value} value={specialty.value}>\r\n              {specialty.label}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <br />\r\n\r\n        {/* Add other fields for doctor registration as needed */}\r\n        \r\n        <button type=\"button\" onClick={handleDoctorRegistration}>\r\n          Register Doctor\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoctorRegistration;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}