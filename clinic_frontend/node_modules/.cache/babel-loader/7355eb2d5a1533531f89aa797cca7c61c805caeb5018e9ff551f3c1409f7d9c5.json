{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gaura\\\\Music\\\\clinic_frontend\\\\src\\\\components\\\\admin\\\\AllDoctorsSchedulesThisWeek.js\",\n  _s = $RefreshSig$();\n// AllDoctorsSchedulesThisWeek.js\nimport React, { useState, useEffect } from \"react\";\nimport { adminApi, setAuthToken } from \"../../api\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AllDoctorsSchedulesThisWeek = () => {\n  _s();\n  const [allDoctorsSchedulesThisWeek, setAllDoctorsSchedulesThisWeek] = useState([]);\n  const navigate = useNavigate();\n  const handleViewSchedules = async () => {\n    setAuthToken();\n    try {\n      // Fetch all doctors' schedules for this week\n      const response = await adminApi.getAllDoctorsSchedulesThisWeek();\n      setAllDoctorsSchedulesThisWeek(response.data.doctorsSchedulesThisWeek);\n    } catch (error) {\n      console.error(\"Error fetching all doctors' schedules for this week:\", error);\n    }\n  };\n  useEffect(() => {\n    // Fetch the schedules when the component mounts\n    handleViewSchedules();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"All Doctors' Schedules This Week\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleViewSchedules,\n      children: \"View Schedules\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), Array.isArray(allDoctorsSchedulesThisWeek) && allDoctorsSchedulesThisWeek.length > 0 ? allDoctorsSchedulesThisWeek.map(doctor => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: doctor.doctorName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), Array.isArray(doctor.allDoctorSchedules) && doctor.allDoctorSchedules.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Day\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: doctor.allDoctorSchedules.map(schedule => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: schedule.doc_DateOnly\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: schedule.dateOfWeek\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: `${schedule.startTime_TimeOnly} - ${schedule.endTime_TimeOnly}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 23\n            }, this)]\n          }, schedule.seduleId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No schedules available for this week.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }, this)]\n    }, doctor.doctorId, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No doctors with schedules available for this week.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(AllDoctorsSchedulesThisWeek, \"01IEUdgEGxEZE+BmF18WvXhhJO8=\", false, function () {\n  return [useNavigate];\n});\n_c = AllDoctorsSchedulesThisWeek;\nexport default AllDoctorsSchedulesThisWeek;\nvar _c;\n$RefreshReg$(_c, \"AllDoctorsSchedulesThisWeek\");","map":{"version":3,"names":["React","useState","useEffect","adminApi","setAuthToken","useNavigate","jsxDEV","_jsxDEV","AllDoctorsSchedulesThisWeek","_s","allDoctorsSchedulesThisWeek","setAllDoctorsSchedulesThisWeek","navigate","handleViewSchedules","response","getAllDoctorsSchedulesThisWeek","data","doctorsSchedulesThisWeek","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Array","isArray","length","map","doctor","doctorName","allDoctorSchedules","schedule","doc_DateOnly","dateOfWeek","startTime_TimeOnly","endTime_TimeOnly","seduleId","doctorId","_c","$RefreshReg$"],"sources":["C:/Users/gaura/Music/clinic_frontend/src/components/admin/AllDoctorsSchedulesThisWeek.js"],"sourcesContent":["// AllDoctorsSchedulesThisWeek.js\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { adminApi, setAuthToken } from \"../../api\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst AllDoctorsSchedulesThisWeek = () => {\r\n  const [allDoctorsSchedulesThisWeek, setAllDoctorsSchedulesThisWeek] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  const handleViewSchedules = async () => {\r\n    setAuthToken();\r\n\r\n    try {\r\n      // Fetch all doctors' schedules for this week\r\n      const response = await adminApi.getAllDoctorsSchedulesThisWeek();\r\n      setAllDoctorsSchedulesThisWeek(response.data.doctorsSchedulesThisWeek);\r\n    } catch (error) {\r\n      console.error(\"Error fetching all doctors' schedules for this week:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Fetch the schedules when the component mounts\r\n    handleViewSchedules();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>All Doctors' Schedules This Week</h2>\r\n      <button onClick={handleViewSchedules}>View Schedules</button>\r\n      {Array.isArray(allDoctorsSchedulesThisWeek) && allDoctorsSchedulesThisWeek.length > 0 ? (\r\n        allDoctorsSchedulesThisWeek.map((doctor) => (\r\n          <div key={doctor.doctorId}>\r\n            <h3>{doctor.doctorName}</h3>\r\n            {Array.isArray(doctor.allDoctorSchedules) && doctor.allDoctorSchedules.length > 0 ? (\r\n              <table>\r\n                <thead>\r\n                  <tr>\r\n                    <th>Date</th>\r\n                    <th>Day</th>\r\n                    <th>Time</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {doctor.allDoctorSchedules.map((schedule) => (\r\n                    <tr key={schedule.seduleId}>\r\n                      <td>{schedule.doc_DateOnly}</td>\r\n                      <td>{schedule.dateOfWeek}</td>\r\n                      <td>{`${schedule.startTime_TimeOnly} - ${schedule.endTime_TimeOnly}`}</td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            ) : (\r\n              <p>No schedules available for this week.</p>\r\n            )}\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <p>No doctors with schedules available for this week.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllDoctorsSchedulesThisWeek;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}