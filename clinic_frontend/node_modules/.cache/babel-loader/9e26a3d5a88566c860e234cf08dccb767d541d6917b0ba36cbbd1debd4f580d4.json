{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gaura\\\\Music\\\\clinic_frontend\\\\src\\\\components\\\\auth\\\\Login.js\",\n  _s = $RefreshSig$();\n// Login.js\nimport React, { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { authApi } from '../../api';\nimport { useUser } from '../../UserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const {\n    updateUserRole\n  } = useUser();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const isPasswordValid = password => {\n    const passwordRegex = /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*[#$^+=!*()@%&]).{6,}$/;\n    return passwordRegex.test(password);\n  };\n  const isUsernameValid = username => {\n    return username.trim() !== ''; // Example: Ensure username is not empty\n  };\n  const handleLogin = async e => {\n    e.preventDefault(); // Prevent default form submission behavior\n\n    try {\n      if (!isUsernameValid(username)) {\n        toast.error('Please enter a valid username.');\n        return;\n      }\n      if (!isPasswordValid(password)) {\n        toast.error('Please enter a valid password.');\n        return;\n      }\n      const credentials = {\n        username,\n        password\n      };\n      const response = await authApi.login(credentials);\n\n      // Assuming your API returns a JWT token\n      const jwtToken = response.data.loginInfo.token;\n      const userRole = response.data.loginInfo.user.userRole;\n      const Name = response.data.loginInfo.user.name;\n      if (jwtToken === undefined || userRole === undefined || Name === undefined) {\n        const error = response.data;\n      }\n      // Update user role in the context\n      updateUserRole(userRole);\n\n      // Store the token and user role in localStorage\n      localStorage.setItem('jwtToken', jwtToken);\n      localStorage.setItem('UserRole', userRole);\n      localStorage.setItem('name', Name);\n      toast.success('Login successful.');\n      console.log('User Role:', userRole);\n      console.log('Login successful:', response);\n\n      // Handle successful login (e.g., redirect to dashboard)\n    } catch (error) {\n      console.error('Login failed:', error);\n      // Handle login error (e.g., display error message)\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Username:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleLogin,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"FpUv4Z4Tl0Q8dTWuPAP19wpXJME=\", false, function () {\n  return [useUser];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","toast","authApi","useUser","jsxDEV","_jsxDEV","Login","_s","updateUserRole","username","setUsername","password","setPassword","isPasswordValid","passwordRegex","test","isUsernameValid","trim","handleLogin","e","preventDefault","error","credentials","response","login","jwtToken","data","loginInfo","token","userRole","user","Name","name","undefined","localStorage","setItem","success","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/gaura/Music/clinic_frontend/src/components/auth/Login.js"],"sourcesContent":["// Login.js\r\nimport React, { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { authApi } from '../../api';\r\nimport { useUser } from '../../UserContext';\r\n\r\nconst Login = () => {\r\n    const { updateUserRole } = useUser();\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const isPasswordValid = (password) => {\r\n    \r\n        const passwordRegex = /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*[#$^+=!*()@%&]).{6,}$/;\r\n        return passwordRegex.test(password);\r\n    };\r\n\r\n    const isUsernameValid = (username) => {\r\n       \r\n        return username.trim() !== ''; // Example: Ensure username is not empty\r\n    };\r\n\r\n    const handleLogin = async (e) => {\r\n        e.preventDefault(); // Prevent default form submission behavior\r\n\r\n        try {\r\n            if (!isUsernameValid(username)) {\r\n                toast.error('Please enter a valid username.');\r\n                return;\r\n            }\r\n\r\n            if (!isPasswordValid(password)) {\r\n                toast.error('Please enter a valid password.');\r\n                return;\r\n            }\r\n\r\n            const credentials = { username, password };\r\n            const response = await authApi.login(credentials);\r\n\r\n            // Assuming your API returns a JWT token\r\n            const jwtToken = response.data.loginInfo.token;\r\n            const userRole = response.data.loginInfo.user.userRole;\r\n            const Name = response.data.loginInfo.user.name;\r\n            if(jwtToken === undefined || userRole === undefined || Name === undefined){\r\n                const error = response.data;\r\n                \r\n            }                \r\n            // Update user role in the context\r\n            updateUserRole(userRole);\r\n\r\n            // Store the token and user role in localStorage\r\n            localStorage.setItem('jwtToken', jwtToken);\r\n            localStorage.setItem('UserRole', userRole);\r\n            localStorage.setItem('name', Name);\r\n\r\n            toast.success('Login successful.');\r\n            console.log('User Role:', userRole);\r\n            console.log('Login successful:', response);\r\n\r\n            // Handle successful login (e.g., redirect to dashboard)\r\n        } catch (error) {\r\n            console.error('Login failed:', error);\r\n            // Handle login error (e.g., display error message)\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Login</h2>\r\n            <form>\r\n                <label>Username:</label>\r\n                <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} />\r\n                <br />\r\n                <label>Password:</label>\r\n                <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n                <br />\r\n                <button type=\"button\" onClick={handleLogin}>Login</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}