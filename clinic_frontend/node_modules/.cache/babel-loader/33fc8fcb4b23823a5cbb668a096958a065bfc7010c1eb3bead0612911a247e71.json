{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gaura\\\\Music\\\\clinic_frontend\\\\src\\\\components\\\\admin\\\\EditDoctorSchedule.js\",\n  _s = $RefreshSig$();\n// EditDoctorSchedule.js\nimport React, { useState, useEffect } from 'react';\nimport { adminApi, setAuthToken } from '../../api';\nimport { useLocation } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditDoctorSchedule = () => {\n  _s();\n  const [scheduleData, setScheduleData] = useState({\n    SeduleId: '',\n    DoctorId: '',\n    Date_DateOnly: '',\n    StartTime_TimeOnly: '',\n    EndTime_TimeOnly: ''\n  });\n  const location = useLocation();\n  const {\n    doctorId,\n    scheduleId\n  } = location.state;\n  console.log('Doctor ID:', doctorId);\n  useEffect(() => {\n    setAuthToken();\n\n    // Fetch schedule details using doctorId and scheduleId\n    adminApi.getDoctorSchedules(doctorId).then(response => {\n      const schedule = response.data.find(s => s.SeduleId === scheduleId);\n      if (schedule) {\n        setScheduleData({\n          SeduleId: schedule.SeduleId,\n          DoctorId: schedule.DoctorId,\n          Date_DateOnly: schedule.Doc_DateOnly,\n          StartTime_TimeOnly: schedule.StartTime_TimeOnly,\n          EndTime_TimeOnly: schedule.EndTime_TimeOnly\n        });\n      }\n    }).catch(error => {\n      console.error('Error fetching doctor schedule details:', error);\n    });\n  }, [doctorId, scheduleId]);\n  const handleChange = e => {\n    setScheduleData({\n      ...scheduleData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setAuthToken();\n    try {\n      const response = await adminApi.editDoctorSchedule(scheduleData);\n      // Handle success\n      toast.success('Doctor schedule updated successfully.');\n      console.log('API Response:', response.data);\n      // Optionally, you can perform additional actions after successful schedule update\n    } catch (error) {\n      // Handle failure\n      console.error('Error updating doctor schedule:', error);\n      if (error.response) {\n        // The request was made, but the server responded with a status code outside the 2xx range\n        console.log('Server Response:', error.response.data);\n        toast.error(`Error: ${error.response.data.message}`);\n      } else if (error.request) {\n        // The request was made but no response was received\n        toast.error('Error: No response from the server.');\n      } else {\n        // Something happened in setting up the request that triggered an Error\n        toast.error(`Error: ${error.message}`);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit Doctor Schedule\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        name: \"Date_DateOnly\",\n        value: scheduleData.Date_DateOnly,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Start Time:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"time\",\n        name: \"StartTime_TimeOnly\",\n        value: scheduleData.StartTime_TimeOnly,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"End Time:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"time\",\n        name: \"EndTime_TimeOnly\",\n        value: scheduleData.EndTime_TimeOnly,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update Schedule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(EditDoctorSchedule, \"P/NCYE0M3JQBmwdp9J4xx4lJ1hs=\", false, function () {\n  return [useLocation];\n});\n_c = EditDoctorSchedule;\nexport default EditDoctorSchedule;\nvar _c;\n$RefreshReg$(_c, \"EditDoctorSchedule\");","map":{"version":3,"names":["React","useState","useEffect","adminApi","setAuthToken","useLocation","toast","jsxDEV","_jsxDEV","EditDoctorSchedule","_s","scheduleData","setScheduleData","SeduleId","DoctorId","Date_DateOnly","StartTime_TimeOnly","EndTime_TimeOnly","location","doctorId","scheduleId","state","console","log","getDoctorSchedules","then","response","schedule","data","find","s","Doc_DateOnly","catch","error","handleChange","e","target","name","value","handleSubmit","preventDefault","editDoctorSchedule","success","message","request","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","_c","$RefreshReg$"],"sources":["C:/Users/gaura/Music/clinic_frontend/src/components/admin/EditDoctorSchedule.js"],"sourcesContent":["// EditDoctorSchedule.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { adminApi, setAuthToken } from '../../api';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst EditDoctorSchedule = () => {\r\n  const [scheduleData, setScheduleData] = useState({\r\n    SeduleId: '',\r\n    DoctorId: '',\r\n    Date_DateOnly: '',\r\n    StartTime_TimeOnly: '',\r\n    EndTime_TimeOnly: '',\r\n  });\r\n\r\n  const location = useLocation();\r\n  const { doctorId, scheduleId } = location.state;\r\n  console.log('Doctor ID:', doctorId);\r\n  \r\n\r\n  useEffect(() => {\r\n    setAuthToken();\r\n\r\n    // Fetch schedule details using doctorId and scheduleId\r\n    adminApi.getDoctorSchedules(doctorId)\r\n      .then(response => {\r\n        const schedule = response.data.find(s => s.SeduleId === scheduleId);\r\n        if (schedule) {\r\n          setScheduleData({\r\n            SeduleId: schedule.SeduleId,\r\n            DoctorId: schedule.DoctorId,\r\n            Date_DateOnly: schedule.Doc_DateOnly,\r\n            StartTime_TimeOnly: schedule.StartTime_TimeOnly,\r\n            EndTime_TimeOnly: schedule.EndTime_TimeOnly,\r\n          });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching doctor schedule details:', error);\r\n      });\r\n  }, [doctorId, scheduleId]);\r\n\r\n  const handleChange = (e) => {\r\n    setScheduleData({\r\n      ...scheduleData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    setAuthToken();\r\n\r\n    try {\r\n      const response = await adminApi.editDoctorSchedule(scheduleData);\r\n      // Handle success\r\n      toast.success('Doctor schedule updated successfully.');\r\n      console.log('API Response:', response.data);\r\n      // Optionally, you can perform additional actions after successful schedule update\r\n    } catch (error) {\r\n      // Handle failure\r\n      console.error('Error updating doctor schedule:', error);\r\n\r\n      if (error.response) {\r\n        // The request was made, but the server responded with a status code outside the 2xx range\r\n        console.log('Server Response:', error.response.data);\r\n        toast.error(`Error: ${error.response.data.message}`);\r\n      } else if (error.request) {\r\n        // The request was made but no response was received\r\n        toast.error('Error: No response from the server.');\r\n      } else {\r\n        // Something happened in setting up the request that triggered an Error\r\n        toast.error(`Error: ${error.message}`);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Edit Doctor Schedule</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>Date:</label>\r\n        <input\r\n          type=\"date\"\r\n          name=\"Date_DateOnly\"\r\n          value={scheduleData.Date_DateOnly}\r\n          onChange={handleChange}\r\n        />\r\n        <br />\r\n\r\n        <label>Start Time:</label>\r\n        <input\r\n          type=\"time\"\r\n          name=\"StartTime_TimeOnly\"\r\n          value={scheduleData.StartTime_TimeOnly}\r\n          onChange={handleChange}\r\n        />\r\n        <br />\r\n\r\n        <label>End Time:</label>\r\n        <input\r\n          type=\"time\"\r\n          name=\"EndTime_TimeOnly\"\r\n          value={scheduleData.EndTime_TimeOnly}\r\n          onChange={handleChange}\r\n        />\r\n        <br />\r\n\r\n        <button type=\"submit\">Update Schedule</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditDoctorSchedule;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}