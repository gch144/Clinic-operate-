{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gaura\\\\Music\\\\clinic_frontend\\\\src\\\\components\\\\admin\\\\DoctorRegistration.js\",\n  _s = $RefreshSig$();\n// AdminDashboard.js\n\nimport { adminApi, setAuthToken } from '../../api'; // Update the path\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mapSpecialtyToName = specialty => {\n  switch (specialty) {\n    case 0:\n      return 'None';\n    case 1:\n      return 'Home';\n    case 2:\n      return 'ENT';\n    case 3:\n    // Add other cases for different specialties\n    default:\n      return '';\n  }\n};\nconst DoctorRegistration = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordConfirm, setPasswordConfirm] = useState('');\n  const [specialty, setSpecialty] = useState(0);\n  const handleDoctorRegistration = async () => {\n    // Set JWT token in headers before making any admin API requests\n    setAuthToken();\n    try {\n      // Use the registerDoctor API function to register a doctor\n      const response = await adminApi.registerDoctor(doctorData);\n\n      // Handle the response as needed\n      console.log('Doctor registration successful:', response.data);\n\n      // You can reset the form or take any other actions after successful registration\n      setDoctorData({\n        name: '',\n        username: '',\n        email: '',\n        password: '',\n        passwordConfirm: '',\n        specialty: 0\n      });\n    } catch (error) {\n      console.error('Error registering doctor:', error);\n      // Handle the error (display an error message, etc.)\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Doctor Registration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: doctorData.name,\n        onChange: e => setDoctorData({\n          ...doctorData,\n          name: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Username:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: doctorData.username,\n        onChange: e => setDoctorData({\n          ...doctorData,\n          username: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: doctorData.email,\n        onChange: e => setDoctorData({\n          ...doctorData,\n          email: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: doctorData.password,\n        onChange: e => setDoctorData({\n          ...doctorData,\n          password: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Confirm Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: doctorData.passwordConfirm,\n        onChange: e => setDoctorData({\n          ...doctorData,\n          passwordConfirm: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Specialty:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: doctorData.specialty,\n        onChange: e => setDoctorData({\n          ...doctorData,\n          specialty: parseInt(e.target.value, 10)\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleDoctorRegistration,\n        children: \"Register Doctor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(DoctorRegistration, \"TyNTRA6bOfqGfsE/NOK3uiLjSg4=\");\n_c = DoctorRegistration;\nexport default DoctorRegistration;\nvar _c;\n$RefreshReg$(_c, \"DoctorRegistration\");","map":{"version":3,"names":["adminApi","setAuthToken","React","useState","jsxDEV","_jsxDEV","mapSpecialtyToName","specialty","DoctorRegistration","_s","name","setName","username","setUsername","email","setEmail","password","setPassword","passwordConfirm","setPasswordConfirm","setSpecialty","handleDoctorRegistration","response","registerDoctor","doctorData","console","log","data","setDoctorData","error","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","parseInt","onClick","_c","$RefreshReg$"],"sources":["C:/Users/gaura/Music/clinic_frontend/src/components/admin/DoctorRegistration.js"],"sourcesContent":["// AdminDashboard.js\r\n\r\nimport { adminApi, setAuthToken } from '../../api'; // Update the path\r\nimport React, { useState } from 'react';\r\n\r\nconst mapSpecialtyToName = (specialty) => {\r\n    switch (specialty) {\r\n      case 0:\r\n        return 'None';\r\n      case 1:\r\n        return 'Home';\r\n      case 2:\r\n        return 'ENT';\r\n        case 3:\r\n      // Add other cases for different specialties\r\n      default:\r\n        return '';\r\n    }\r\n  };\r\nconst DoctorRegistration = () => {\r\n    const [name, setName] = useState('');\r\n    const [username, setUsername] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [passwordConfirm, setPasswordConfirm] = useState('');\r\n    const [specialty, setSpecialty] = useState(0);\r\n\r\n  const handleDoctorRegistration = async () => {\r\n    // Set JWT token in headers before making any admin API requests\r\n    setAuthToken();\r\n\r\n    try {\r\n      // Use the registerDoctor API function to register a doctor\r\n      const response = await adminApi.registerDoctor(doctorData);\r\n\r\n      // Handle the response as needed\r\n      console.log('Doctor registration successful:', response.data);\r\n\r\n      // You can reset the form or take any other actions after successful registration\r\n      setDoctorData({\r\n        name: '',\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n        passwordConfirm: '',\r\n        specialty: 0,\r\n      });\r\n    } catch (error) {\r\n      console.error('Error registering doctor:', error);\r\n      // Handle the error (display an error message, etc.)\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Doctor Registration</h2>\r\n      {/* Doctor Registration Form */}\r\n      <form>\r\n        <label>Name:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={doctorData.name}\r\n          onChange={(e) => setDoctorData({ ...doctorData, name: e.target.value })}\r\n        />\r\n        <br />\r\n\r\n        <label>Username:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={doctorData.username}\r\n          onChange={(e) => setDoctorData({ ...doctorData, username: e.target.value })}\r\n        />\r\n        <br />\r\n\r\n        <label>Email:</label>\r\n        <input\r\n          type=\"email\"\r\n          value={doctorData.email}\r\n          onChange={(e) => setDoctorData({ ...doctorData, email: e.target.value })}\r\n        />\r\n        <br />\r\n\r\n        <label>Password:</label>\r\n        <input\r\n          type=\"password\"\r\n          value={doctorData.password}\r\n          onChange={(e) => setDoctorData({ ...doctorData, password: e.target.value })}\r\n        />\r\n        <br />\r\n\r\n        <label>Confirm Password:</label>\r\n        <input\r\n          type=\"password\"\r\n          value={doctorData.passwordConfirm}\r\n          onChange={(e) => setDoctorData({ ...doctorData, passwordConfirm: e.target.value })}\r\n        />\r\n        <br />\r\n\r\n        <label>Specialty:</label>\r\n        <input\r\n          type=\"number\"\r\n          value={doctorData.specialty}\r\n          onChange={(e) => setDoctorData({ ...doctorData, specialty: parseInt(e.target.value, 10) })}\r\n        />\r\n        <br />\r\n\r\n        {/* Add other fields for doctor registration as needed */}\r\n        \r\n        <button type=\"button\" onClick={handleDoctorRegistration}>\r\n          Register Doctor\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoctorRegistration;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}