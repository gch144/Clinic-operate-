{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gaura\\\\Music\\\\clinic_frontend\\\\src\\\\components\\\\admin\\\\AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  useEffect(() => {\n    // Set JWT token in headers before making any admin API requests\n    setAuthToken();\n\n    // Example: Fetch admin data\n    adminApi.getData().then(response => {\n      console.log('Admin data:', response.data);\n    }).catch(error => {\n      console.error('Error fetching admin data:', error);\n    });\n  }, []); // Make sure to run this effect only once on component mount\n\n  // Render your admin dashboard content here\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 7\n  }, this);\n};\n_s(AdminDashboard, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["AdminDashboard","_s","useEffect","setAuthToken","adminApi","getData","then","response","console","log","data","catch","error","_jsxDEV","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/gaura/Music/clinic_frontend/src/components/admin/AdminDashboard.js"],"sourcesContent":["const AdminDashboard = () => {\r\n    useEffect(() => {\r\n      // Set JWT token in headers before making any admin API requests\r\n      setAuthToken();\r\n  \r\n      // Example: Fetch admin data\r\n      adminApi.getData()\r\n        .then(response => {\r\n          console.log('Admin data:', response.data);\r\n        })\r\n        .catch(error => {\r\n          console.error('Error fetching admin data:', error);\r\n        });\r\n    }, []); // Make sure to run this effect only once on component mount\r\n  \r\n    // Render your admin dashboard content here\r\n  \r\n    return (\r\n      <div>\r\n        <h1>Admin Dashboard</h1>\r\n        {/* Add other components and functionality */}\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default AdminDashboard;"],"mappings":";;;AAAA,MAAMA,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzBC,SAAS,CAAC,MAAM;IACd;IACAC,YAAY,CAAC,CAAC;;IAEd;IACAC,QAAQ,CAACC,OAAO,CAAC,CAAC,CACfC,IAAI,CAACC,QAAQ,IAAI;MAChBC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEF,QAAQ,CAACG,IAAI,CAAC;IAC3C,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACdJ,OAAO,CAACI,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;;EAEA,oBACEC,OAAA;IAAAC,QAAA,eACED,OAAA;MAAAC,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAErB,CAAC;AAEV,CAAC;AAACjB,EAAA,CAvBED,cAAc;AAAAmB,EAAA,GAAdnB,cAAc;AAyBlB,eAAeA,cAAc;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}