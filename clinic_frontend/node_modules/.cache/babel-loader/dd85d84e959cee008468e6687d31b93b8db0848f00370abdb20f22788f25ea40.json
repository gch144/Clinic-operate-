{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gaura\\\\Music\\\\clinic_frontend\\\\src\\\\components\\\\admin\\\\CreateDoctorSchedule.js\",\n  _s = $RefreshSig$();\n// CreateDoctorSchedule.js\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateDoctorSchedule = ({\n  onCreateSchedule\n}) => {\n  _s();\n  const [scheduleData, setScheduleData] = useState({\n    Date_DateOnly: '',\n    StartTime_TimeOnly: '',\n    EndTime_TimeOnly: ''\n  });\n  const handleChange = e => {\n    setScheduleData({\n      ...scheduleData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Perform validation\n    if (!scheduleData.Date_DateOnly || !scheduleData.StartTime_TimeOnly || !scheduleData.EndTime_TimeOnly) {\n      // Handle empty fields\n      alert('All fields are required.');\n      return;\n    }\n    const currentDate = new Date();\n    const selectedDate = new Date(scheduleData.Date_DateOnly + 'T' + scheduleData.StartTime_TimeOnly);\n    if (selectedDate < currentDate) {\n      // Handle past dates\n      alert('Please select a date and time in the future.');\n      return;\n    }\n    if (scheduleData.StartTime_TimeOnly >= scheduleData.EndTime_TimeOnly) {\n      // Handle invalid time range\n      alert('End time must be after start time.');\n      return;\n    }\n    co;\n    // Call the provided onCreateSchedule function with the schedule data\n    onCreateSchedule(scheduleData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Doctor Schedule\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        name: \"Date_DateOnly\",\n        value: scheduleData.Date_DateOnly,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Start Time:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"time\",\n        name: \"StartTime_TimeOnly\",\n        value: scheduleData.StartTime_TimeOnly,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"End Time:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"time\",\n        name: \"EndTime_TimeOnly\",\n        value: scheduleData.EndTime_TimeOnly,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Schedule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateDoctorSchedule, \"+TakA+JAUlJA0rSPGEShURU8hcA=\");\n_c = CreateDoctorSchedule;\nexport default CreateDoctorSchedule;\nvar _c;\n$RefreshReg$(_c, \"CreateDoctorSchedule\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CreateDoctorSchedule","onCreateSchedule","_s","scheduleData","setScheduleData","Date_DateOnly","StartTime_TimeOnly","EndTime_TimeOnly","handleChange","e","target","name","value","handleSubmit","preventDefault","alert","currentDate","Date","selectedDate","co","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","_c","$RefreshReg$"],"sources":["C:/Users/gaura/Music/clinic_frontend/src/components/admin/CreateDoctorSchedule.js"],"sourcesContent":["// CreateDoctorSchedule.js\r\nimport React, { useState } from 'react';\r\n\r\nconst CreateDoctorSchedule = ({ onCreateSchedule }) => {\r\n  const [scheduleData, setScheduleData] = useState({\r\n    Date_DateOnly: '',\r\n    StartTime_TimeOnly: '',\r\n    EndTime_TimeOnly: '',\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setScheduleData({\r\n      ...scheduleData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Perform validation\r\n    if (!scheduleData.Date_DateOnly || !scheduleData.StartTime_TimeOnly || !scheduleData.EndTime_TimeOnly) {\r\n      // Handle empty fields\r\n      alert('All fields are required.');\r\n      return;\r\n    }\r\n\r\n    const currentDate = new Date();\r\n    const selectedDate = new Date(scheduleData.Date_DateOnly + 'T' + scheduleData.StartTime_TimeOnly);\r\n\r\n    if (selectedDate < currentDate) {\r\n      // Handle past dates\r\n      alert('Please select a date and time in the future.');\r\n      return;\r\n    }\r\n\r\n    if (scheduleData.StartTime_TimeOnly >= scheduleData.EndTime_TimeOnly) {\r\n      // Handle invalid time range\r\n      alert('End time must be after start time.');\r\n      return;\r\n    }\r\nco\r\n    // Call the provided onCreateSchedule function with the schedule data\r\n    onCreateSchedule(scheduleData);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Create Doctor Schedule</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>Date:</label>\r\n        <input\r\n          type=\"date\"\r\n          name=\"Date_DateOnly\"\r\n          value={scheduleData.Date_DateOnly}\r\n          onChange={handleChange}\r\n        />\r\n        <br />\r\n\r\n        <label>Start Time:</label>\r\n        <input\r\n          type=\"time\"\r\n          name=\"StartTime_TimeOnly\"\r\n          value={scheduleData.StartTime_TimeOnly}\r\n          onChange={handleChange}\r\n        />\r\n        <br />\r\n\r\n        <label>End Time:</label>\r\n        <input\r\n          type=\"time\"\r\n          name=\"EndTime_TimeOnly\"\r\n          value={scheduleData.EndTime_TimeOnly}\r\n          onChange={handleChange}\r\n        />\r\n        <br />\r\n\r\n        {/* Add other fields as needed */}\r\n        <button type=\"submit\">Create Schedule</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateDoctorSchedule;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}