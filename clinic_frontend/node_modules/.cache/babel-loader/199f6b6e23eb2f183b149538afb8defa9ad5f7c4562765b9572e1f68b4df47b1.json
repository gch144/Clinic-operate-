{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gaura\\\\Music\\\\clinic_frontend\\\\src\\\\components\\\\admin\\\\DoctorRegistration.js\",\n  _s = $RefreshSig$();\n// AdminDashboard.js\n\nimport { adminApi, setAuthToken } from '../../api'; // Update the path\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst specialties = [{\n  value: 0,\n  label: 'None'\n}, {\n  value: 1,\n  label: 'Home'\n}, {\n  value: 2,\n  label: 'ENT'\n}, {\n  value: 3,\n  label: 'Dermatologist'\n}, {\n  value: 4,\n  label: 'Ophtalmologist'\n}, {\n  value: 5,\n  label: 'Neurologist'\n}, {\n  value: 6,\n  label: 'Orthopedist'\n}, {\n  value: 7,\n  label: 'Pediatrician'\n}];\nconst DoctorRegistration = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordConfirm, setPasswordConfirm] = useState('');\n  const [specialty, setSpecialty] = useState(0);\n  const handleDoctorRegistration = async () => {\n    // Set JWT token in headers before making any admin API requests\n    setAuthToken();\n    try {\n      // Use the registerDoctor API function to register a doctor\n      const response = await adminApi.registerDoctor({\n        name,\n        username,\n        email,\n        password,\n        passwordConfirm,\n        specialty\n      });\n\n      // Handle the response as needed\n      console.log('Doctor registration successful:', response.data);\n\n      // You can reset the form or take any other actions after successful registration\n      setName('');\n      setUsername('');\n      setEmail('');\n      setPassword('');\n      setPasswordConfirm('');\n      setSpecialty(0);\n    } catch (error) {\n      console.error('Error registering doctor:', error);\n      // Handle the error (display an error message, etc.)\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Doctor Registration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Username:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Confirm Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: passwordConfirm,\n        onChange: e => setPasswordConfirm(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Specialty:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: specialty,\n        onChange: e => setSpecialty(parseInt(e.target.value, 10)),\n        children: specialties.map(spec => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: spec.value,\n          children: spec.label\n        }, spec.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleDoctorRegistration,\n        children: \"Register Doctor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(DoctorRegistration, \"TyNTRA6bOfqGfsE/NOK3uiLjSg4=\");\n_c = DoctorRegistration;\nexport default DoctorRegistration;\nvar _c;\n$RefreshReg$(_c, \"DoctorRegistration\");","map":{"version":3,"names":["adminApi","setAuthToken","React","useState","jsxDEV","_jsxDEV","specialties","value","label","DoctorRegistration","_s","name","setName","username","setUsername","email","setEmail","password","setPassword","passwordConfirm","setPasswordConfirm","specialty","setSpecialty","handleDoctorRegistration","response","registerDoctor","console","log","data","error","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","parseInt","map","spec","onClick","_c","$RefreshReg$"],"sources":["C:/Users/gaura/Music/clinic_frontend/src/components/admin/DoctorRegistration.js"],"sourcesContent":["// AdminDashboard.js\r\n\r\nimport { adminApi, setAuthToken } from '../../api'; // Update the path\r\nimport React, { useState } from 'react';\r\n\r\nconst specialties = [\r\n  { value: 0, label: 'None' },\r\n  { value: 1, label: 'Home' },\r\n  { value: 2, label: 'ENT' },\r\n  { value: 3, label: 'Dermatologist' },\r\n  { value: 4, label: 'Ophtalmologist' },\r\n  { value: 5, label: 'Neurologist' },\r\n  { value: 6, label: 'Orthopedist' },\r\n  { value: 7, label: 'Pediatrician' },\r\n];\r\n\r\nconst DoctorRegistration = () => {\r\n  const [name, setName] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [passwordConfirm, setPasswordConfirm] = useState('');\r\n  const [specialty, setSpecialty] = useState(0);\r\n\r\n  const handleDoctorRegistration = async () => {\r\n    // Set JWT token in headers before making any admin API requests\r\n    setAuthToken();\r\n\r\n    try {\r\n      // Use the registerDoctor API function to register a doctor\r\n      const response = await adminApi.registerDoctor({\r\n        name,\r\n        username,\r\n        email,\r\n        password,\r\n        passwordConfirm,\r\n        specialty,\r\n      });\r\n\r\n      // Handle the response as needed\r\n      console.log('Doctor registration successful:', response.data);\r\n\r\n      // You can reset the form or take any other actions after successful registration\r\n      setName('');\r\n      setUsername('');\r\n      setEmail('');\r\n      setPassword('');\r\n      setPasswordConfirm('');\r\n      setSpecialty(0);\r\n    } catch (error) {\r\n      console.error('Error registering doctor:', error);\r\n      // Handle the error (display an error message, etc.)\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Doctor Registration</h2>\r\n      {/* Doctor Registration Form */}\r\n      <form>\r\n        <label>Name:</label>\r\n        <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} />\r\n        <br />\r\n\r\n        <label>Username:</label>\r\n        <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} />\r\n        <br />\r\n\r\n        <label>Email:</label>\r\n        <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n        <br />\r\n\r\n        <label>Password:</label>\r\n        <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n        <br />\r\n\r\n        <label>Confirm Password:</label>\r\n        <input\r\n          type=\"password\"\r\n          value={passwordConfirm}\r\n          onChange={(e) => setPasswordConfirm(e.target.value)}\r\n        />\r\n        <br />\r\n\r\n        <label>Specialty:</label>\r\n        <select value={specialty} onChange={(e) => setSpecialty(parseInt(e.target.value, 10))}>\r\n          {specialties.map((spec) => (\r\n            <option key={spec.value} value={spec.value}>\r\n              {spec.label}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <br />\r\n\r\n        {/* Add other fields for doctor registration as needed */}\r\n\r\n        <button type=\"button\" onClick={handleDoctorRegistration}>\r\n          Register Doctor\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoctorRegistration;\r\n"],"mappings":";;AAAA;;AAEA,SAASA,QAAQ,EAAEC,YAAY,QAAQ,WAAW,CAAC,CAAC;AACpD,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,WAAW,GAAG,CAClB;EAAEC,KAAK,EAAE,CAAC;EAAEC,KAAK,EAAE;AAAO,CAAC,EAC3B;EAAED,KAAK,EAAE,CAAC;EAAEC,KAAK,EAAE;AAAO,CAAC,EAC3B;EAAED,KAAK,EAAE,CAAC;EAAEC,KAAK,EAAE;AAAM,CAAC,EAC1B;EAAED,KAAK,EAAE,CAAC;EAAEC,KAAK,EAAE;AAAgB,CAAC,EACpC;EAAED,KAAK,EAAE,CAAC;EAAEC,KAAK,EAAE;AAAiB,CAAC,EACrC;EAAED,KAAK,EAAE,CAAC;EAAEC,KAAK,EAAE;AAAc,CAAC,EAClC;EAAED,KAAK,EAAE,CAAC;EAAEC,KAAK,EAAE;AAAc,CAAC,EAClC;EAAED,KAAK,EAAE,CAAC;EAAEC,KAAK,EAAE;AAAe,CAAC,CACpC;AAED,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACgB,eAAe,EAAEC,kBAAkB,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACkB,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC;EAE7C,MAAMoB,wBAAwB,GAAG,MAAAA,CAAA,KAAY;IAC3C;IACAtB,YAAY,CAAC,CAAC;IAEd,IAAI;MACF;MACA,MAAMuB,QAAQ,GAAG,MAAMxB,QAAQ,CAACyB,cAAc,CAAC;QAC7Cd,IAAI;QACJE,QAAQ;QACRE,KAAK;QACLE,QAAQ;QACRE,eAAe;QACfE;MACF,CAAC,CAAC;;MAEF;MACAK,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEH,QAAQ,CAACI,IAAI,CAAC;;MAE7D;MACAhB,OAAO,CAAC,EAAE,CAAC;MACXE,WAAW,CAAC,EAAE,CAAC;MACfE,QAAQ,CAAC,EAAE,CAAC;MACZE,WAAW,CAAC,EAAE,CAAC;MACfE,kBAAkB,CAAC,EAAE,CAAC;MACtBE,YAAY,CAAC,CAAC,CAAC;IACjB,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjD;IACF;EACF,CAAC;EAED,oBACExB,OAAA;IAAAyB,QAAA,gBACEzB,OAAA;MAAAyB,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE5B7B,OAAA;MAAAyB,QAAA,gBACEzB,OAAA;QAAAyB,QAAA,EAAO;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACpB7B,OAAA;QAAO8B,IAAI,EAAC,MAAM;QAAC5B,KAAK,EAAEI,IAAK;QAACyB,QAAQ,EAAGC,CAAC,IAAKzB,OAAO,CAACyB,CAAC,CAACC,MAAM,CAAC/B,KAAK;MAAE;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC5E7B,OAAA;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAEN7B,OAAA;QAAAyB,QAAA,EAAO;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACxB7B,OAAA;QAAO8B,IAAI,EAAC,MAAM;QAAC5B,KAAK,EAAEM,QAAS;QAACuB,QAAQ,EAAGC,CAAC,IAAKvB,WAAW,CAACuB,CAAC,CAACC,MAAM,CAAC/B,KAAK;MAAE;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACpF7B,OAAA;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAEN7B,OAAA;QAAAyB,QAAA,EAAO;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACrB7B,OAAA;QAAO8B,IAAI,EAAC,OAAO;QAAC5B,KAAK,EAAEQ,KAAM;QAACqB,QAAQ,EAAGC,CAAC,IAAKrB,QAAQ,CAACqB,CAAC,CAACC,MAAM,CAAC/B,KAAK;MAAE;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC/E7B,OAAA;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAEN7B,OAAA;QAAAyB,QAAA,EAAO;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACxB7B,OAAA;QAAO8B,IAAI,EAAC,UAAU;QAAC5B,KAAK,EAAEU,QAAS;QAACmB,QAAQ,EAAGC,CAAC,IAAKnB,WAAW,CAACmB,CAAC,CAACC,MAAM,CAAC/B,KAAK;MAAE;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACxF7B,OAAA;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAEN7B,OAAA;QAAAyB,QAAA,EAAO;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAChC7B,OAAA;QACE8B,IAAI,EAAC,UAAU;QACf5B,KAAK,EAAEY,eAAgB;QACvBiB,QAAQ,EAAGC,CAAC,IAAKjB,kBAAkB,CAACiB,CAAC,CAACC,MAAM,CAAC/B,KAAK;MAAE;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrD,CAAC,eACF7B,OAAA;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAEN7B,OAAA;QAAAyB,QAAA,EAAO;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACzB7B,OAAA;QAAQE,KAAK,EAAEc,SAAU;QAACe,QAAQ,EAAGC,CAAC,IAAKf,YAAY,CAACiB,QAAQ,CAACF,CAAC,CAACC,MAAM,CAAC/B,KAAK,EAAE,EAAE,CAAC,CAAE;QAAAuB,QAAA,EACnFxB,WAAW,CAACkC,GAAG,CAAEC,IAAI,iBACpBpC,OAAA;UAAyBE,KAAK,EAAEkC,IAAI,CAAClC,KAAM;UAAAuB,QAAA,EACxCW,IAAI,CAACjC;QAAK,GADAiC,IAAI,CAAClC,KAAK;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEf,CACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC,eACT7B,OAAA;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAIN7B,OAAA;QAAQ8B,IAAI,EAAC,QAAQ;QAACO,OAAO,EAAEnB,wBAAyB;QAAAO,QAAA,EAAC;MAEzD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACxB,EAAA,CAtFID,kBAAkB;AAAAkC,EAAA,GAAlBlC,kBAAkB;AAwFxB,eAAeA,kBAAkB;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}