{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gaura\\\\Music\\\\clinic_frontend\\\\src\\\\components\\\\auth\\\\Registration.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { authApi } from '../../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Registration = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordConfirm, setPasswordConfirm] = useState('');\n  const isEmailValid = email => {\n    // Regular expression for a basic email validation\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  };\n  const isPasswordValid = password => {\n    // Regular expression for password validation\n    const passwordRegex = /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*[#$^+=!*()@%&]).{6,}$/;\n    return passwordRegex.test(password);\n  };\n  const handleRegister = async () => {\n    try {\n      // Validation checks\n      if (!name || !username || !email || !password || !passwordConfirm) {\n        toast.warning('All fields are required.');\n        return;\n      }\n      if (!isEmailValid(email)) {\n        toast.warning('Enter a valid email address.');\n        return;\n      }\n      if (!isPasswordValid(password)) {\n        toast.warning('Password must meet the specified criteria.');\n        toast.info('Minimum length 6 and must contain  1 Uppercase,1 lowercase, 1 special character and 1 digit');\n        return;\n      }\n      if (password !== passwordConfirm) {\n        toast.warning('Password and Confirm Password must match.');\n        return;\n      }\n      const registrationData = {\n        name,\n        username,\n        email,\n        password,\n        passwordConfirm\n      };\n      const result = await authApi.register(registrationData);\n      toast.success('Registration successful.');\n      console.log('Registration successful:', result);\n      // Handle successful registration (e.g., show success message, redirect)\n    } catch (error) {\n      console.error('Registration failed:', error);\n      // Handle registration error (e.g., display error message)\n      toast.error('Registration failed. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"U ser Registration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Username:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Confirm Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: passwordConfirm,\n        onChange: e => setPasswordConfirm(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleRegister,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(Registration, \"95PFYfOJt/1ovYrJ3LgW0a0qDUc=\");\n_c = Registration;\nexport default Registration;\nvar _c;\n$RefreshReg$(_c, \"Registration\");","map":{"version":3,"names":["React","useState","toast","authApi","jsxDEV","_jsxDEV","Registration","_s","name","setName","username","setUsername","email","setEmail","password","setPassword","passwordConfirm","setPasswordConfirm","isEmailValid","emailRegex","test","isPasswordValid","passwordRegex","handleRegister","warning","info","registrationData","result","register","success","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/gaura/Music/clinic_frontend/src/components/auth/Registration.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { authApi } from '../../api';\r\n\r\nconst Registration = () => {\r\n  const [name, setName] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [passwordConfirm, setPasswordConfirm] = useState('');\r\n\r\n  const isEmailValid = (email) => {\r\n    // Regular expression for a basic email validation\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return emailRegex.test(email);\r\n  };\r\n\r\n  const isPasswordValid = (password) => {\r\n    // Regular expression for password validation\r\n    const passwordRegex = /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*[#$^+=!*()@%&]).{6,}$/;\r\n    return passwordRegex.test(password);\r\n  };\r\n\r\n  const handleRegister = async () => {\r\n    try {\r\n      // Validation checks\r\n      if (!name || !username || !email || !password || !passwordConfirm) {\r\n        toast.warning('All fields are required.');\r\n        return;\r\n      }\r\n\r\n      if (!isEmailValid(email)) {\r\n        toast.warning('Enter a valid email address.');\r\n        return;\r\n      }\r\n\r\n      if (!isPasswordValid(password)) {\r\n        toast.warning('Password must meet the specified criteria.');\r\n        toast.info('Minimum length 6 and must contain  1 Uppercase,1 lowercase, 1 special character and 1 digit');\r\n        return;\r\n      }\r\n\r\n      if (password !== passwordConfirm) {\r\n        toast.warning('Password and Confirm Password must match.');\r\n        return;\r\n      }\r\n\r\n      const registrationData = {\r\n        name,\r\n        username,\r\n        email,\r\n        password,\r\n        passwordConfirm\r\n      };\r\n\r\n      const result = await authApi.register(registrationData);\r\n      toast.success('Registration successful.');\r\n      console.log('Registration successful:', result);\r\n      // Handle successful registration (e.g., show success message, redirect)\r\n    } catch (error) {\r\n      console.error('Registration failed:', error);\r\n      // Handle registration error (e.g., display error message)\r\n      toast.error('Registration failed. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>U ser Registration</h2>\r\n      <form>\r\n        <label>Name:</label>\r\n        <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} />\r\n        <br />\r\n        <label>Username:</label>\r\n        <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} />\r\n        <br />\r\n        <label>Email:</label>\r\n        <input type=\"text\" value={email} onChange={(e) => setEmail(e.target.value)} />\r\n        <br />\r\n        <label>Password:</label>\r\n        <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n        <br />\r\n        <label>Confirm Password:</label>\r\n        <input type=\"password\" value={passwordConfirm} onChange={(e) => setPasswordConfirm(e.target.value)} />\r\n        <br />\r\n        <button type=\"button\" onClick={handleRegister}>Register</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Registration;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}