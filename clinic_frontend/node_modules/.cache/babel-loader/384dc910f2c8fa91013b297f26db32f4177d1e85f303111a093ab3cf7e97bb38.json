{"ast":null,"code":"// src/utils/api.js\n\nimport axios from 'axios';\nconst BASE_URL = 'http://localhost:5178/api'; // Replace with your actual backend API URL\n\nconst api = axios.create({\n  baseURL: BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n    // You can include any additional headers you need\n  }\n});\n\n// Authentication API functions\nconst authApi = {\n  login: credentials => api.post('/authentication/login', credentials),\n  register: userData => api.post('/authentication/register', userData),\n  changePassword: passwordData => api.post('/authentication/changepassword', passwordData)\n  // Add other authentication-related functions as needed\n};\nconst adminApi = {\n  getData: () => api.get('/Admin/GetData'),\n  registerDoctor: doctorData => api.post('/Admin/registerDOC', doctorData),\n  getUnverifiedUsers: () => api.get('/Admin/GetUnverifiedUsers'),\n  verifyUser: userId => api.post(`/Admin/VerifyUser/${userId}`),\n  getAllDoctors: () => api.get('/Admin/ListAllDoctors'),\n  createDoctorSchedule: scheduleData => api.post(`/Admin/Createdoctorschedules`, scheduleData),\n  getDoctorSchedules: doctorId => api.get(`/Admin/GetDoctorSchedules/${doctorId}`),\n  editDoctorSchedule: scheduleData => api.put(`/Admin/EditDoctorschedules`, scheduleData),\n  deleteDoctorSchedule: (scheduleId, doctorId) => api.delete(`/Admin/DeleteDoctorschedules/${scheduleId}/${doctorId}`),\n  getAllDoctorsSchedulesThisWeek: () => api.get('/Admin/GetAllDoctorsSchedulesThisWeek'),\n  copyCurrentWeekSchedules: () => api.post('/Admin/CopyCurrentWeekSchedules')\n};\nconst patientAPi = {\n  searchDoctor: doctorSpecialty => api.get('/Appointment/SearchDoctorsBySpecialty', {\n    params: {\n      doctorSpecialty\n    }\n  }),\n  displayDoctorAvailability: doctorId => api.get(`/Appointment/DisplayDoctorAvailability`, {\n    params: {\n      doctorId\n    }\n  }),\n  dispalayAvailableSlots: (doctorId, doctordate) => api.get(`/Appointment/DisplayAvailableTimeSlots`, {\n    params: {\n      doctorId,\n      doctordate\n    }\n  }),\n  bookAppointment: appointmentData => api.post('/Appointment/BookAppointment', appointmentData),\n  diaplayPatientAppointments: () => api.get('/Appointment/DisplayPatientAppointments'),\n  cancelAppointment: appointmentId => api.delete(`/Appointment/CancelAppointment/${appointmentId}`)\n};\nconst doctorAPi = {\n  displayDoctorAppointments: () => api.get('/Appointment/DisplayDoctorAppointments'),\n  checkAppointment: updateAppointment => api.put('/Appointment/CheckAppointment', {\n    updateAppointment\n  })\n};\nconst setAuthToken = () => {\n  const token = localStorage.getItem('jwtToken');\n  if (token) {\n    api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n  } else {\n    delete api.defaults.headers.common['Authorization'];\n  }\n};\nexport { authApi, adminApi, patientAPi, doctorAPi, setAuthToken };","map":{"version":3,"names":["axios","BASE_URL","api","create","baseURL","headers","authApi","login","credentials","post","register","userData","changePassword","passwordData","adminApi","getData","get","registerDoctor","doctorData","getUnverifiedUsers","verifyUser","userId","getAllDoctors","createDoctorSchedule","scheduleData","getDoctorSchedules","doctorId","editDoctorSchedule","put","deleteDoctorSchedule","scheduleId","delete","getAllDoctorsSchedulesThisWeek","copyCurrentWeekSchedules","patientAPi","searchDoctor","doctorSpecialty","params","displayDoctorAvailability","dispalayAvailableSlots","doctordate","bookAppointment","appointmentData","diaplayPatientAppointments","cancelAppointment","appointmentId","doctorAPi","displayDoctorAppointments","checkAppointment","updateAppointment","setAuthToken","token","localStorage","getItem","defaults","common"],"sources":["C:/Users/gaura/Music/Clinic-operate-/clinic_frontend/src/api.js"],"sourcesContent":["// src/utils/api.js\r\n\r\nimport axios from 'axios';\r\n\r\nconst BASE_URL = 'http://localhost:5178/api'; // Replace with your actual backend API URL\r\n\r\nconst api = axios.create({\r\n  baseURL: BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n    // You can include any additional headers you need\r\n  },\r\n});\r\n\r\n// Authentication API functions\r\nconst authApi = {\r\n  login: (credentials) => api.post('/authentication/login', credentials),\r\n  register: (userData) => api.post('/authentication/register', userData),\r\n  changePassword: (passwordData) => api.post('/authentication/changepassword', passwordData),\r\n  // Add other authentication-related functions as needed\r\n};\r\nconst adminApi = {\r\n  getData: () => api.get('/Admin/GetData'),\r\n  registerDoctor: (doctorData) => api.post('/Admin/registerDOC', doctorData),\r\n  getUnverifiedUsers: () => api.get('/Admin/GetUnverifiedUsers'),\r\n  verifyUser: (userId) => api.post(`/Admin/VerifyUser/${userId}`),\r\n  getAllDoctors : () => api.get('/Admin/ListAllDoctors'),\r\n  createDoctorSchedule: (scheduleData) => api.post(`/Admin/Createdoctorschedules`, scheduleData),\r\n  getDoctorSchedules: (doctorId) => api.get(`/Admin/GetDoctorSchedules/${doctorId}`),\r\n  editDoctorSchedule: (scheduleData) => api.put(`/Admin/EditDoctorschedules`, scheduleData),\r\n  deleteDoctorSchedule: (scheduleId, doctorId) =>\r\n  api.delete(`/Admin/DeleteDoctorschedules/${scheduleId}/${doctorId}`),\r\n  getAllDoctorsSchedulesThisWeek: () => api.get('/Admin/GetAllDoctorsSchedulesThisWeek'),\r\n  copyCurrentWeekSchedules: () => api.post('/Admin/CopyCurrentWeekSchedules'),\r\n};\r\nconst patientAPi={\r\n  \r\n    searchDoctor: (doctorSpecialty) => api.get('/Appointment/SearchDoctorsBySpecialty', { params: { doctorSpecialty } }),\r\n    displayDoctorAvailability: (doctorId) => api.get(`/Appointment/DisplayDoctorAvailability`, { params: { doctorId } }),\r\n    dispalayAvailableSlots: (doctorId, doctordate) => api.get(`/Appointment/DisplayAvailableTimeSlots`, { params: { doctorId, doctordate } }),\r\n    bookAppointment: (appointmentData) => api.post('/Appointment/BookAppointment', appointmentData),\r\n    diaplayPatientAppointments: () => api.get('/Appointment/DisplayPatientAppointments'),\r\n    cancelAppointment: (appointmentId) => api.delete(`/Appointment/CancelAppointment/${appointmentId}`),\r\n};\r\nconst doctorAPi={\r\n  displayDoctorAppointments: () => api.get('/Appointment/DisplayDoctorAppointments'),\r\n  checkAppointment: (updateAppointment) =>\r\n  api.put('/Appointment/CheckAppointment', { updateAppointment }),\r\n};\r\n\r\nconst setAuthToken = () => {\r\n  const token = localStorage.getItem('jwtToken');\r\n  if (token) {\r\n    api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n  } else {\r\n    delete api.defaults.headers.common['Authorization'];\r\n  }\r\n};\r\nexport { authApi,adminApi,patientAPi,doctorAPi,setAuthToken\r\n };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}