{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gaura\\\\Music\\\\clinic_frontend\\\\src\\\\components\\\\patient\\\\DoctorAvailability.js\",\n  _s = $RefreshSig$();\n// DoctorAvailability.js\nimport React, { useState, useEffect } from 'react';\nimport { patientAPi, setAuthToken } from '../../api';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DoctorAvailability = () => {\n  _s();\n  const [availability, setAvailability] = useState([]);\n  const location = useLocation(); // Use useLocation hook\n  const navigate = useNavigate();\n  const {\n    doctorId\n  } = location.state;\n\n  //console.log('Doctor Id:', doctorId);\n  //const { doctorId}= use\n\n  setAuthToken();\n  const handleCheckSlots = selectedDate => {\n    navigate('/AllSlots/', {\n      state: {\n        doctorId,\n        date: selectedDate\n      }\n    });\n    con;\n  };\n  useEffect(() => {\n    const fetchAvailability = async () => {\n      try {\n        const response = await patientAPi.displayDoctorAvailability(doctorId);\n        setAvailability(response.data.showDoctorSceduleDTO);\n        console.log('Availability:', response.data);\n      } catch (error) {\n        console.error('Error fetching availability:', error);\n      }\n    };\n    fetchAvailability();\n  }, [doctorId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Doctor Availability\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), availability.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Day\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: availability.map(slot => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: slot.doc_DateOnly\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: slot.dateOfWeek\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleCheckSlots(slot.doc_DateOnly),\n              children: \"Check Slots\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this)]\n        }, slot.seduleId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No availability information available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(DoctorAvailability, \"6zagJTD+yf9evQye9Po5pvUXGUU=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = DoctorAvailability;\nexport default DoctorAvailability;\nvar _c;\n$RefreshReg$(_c, \"DoctorAvailability\");","map":{"version":3,"names":["React","useState","useEffect","patientAPi","setAuthToken","useLocation","useNavigate","jsxDEV","_jsxDEV","DoctorAvailability","_s","availability","setAvailability","location","navigate","doctorId","state","handleCheckSlots","selectedDate","date","con","fetchAvailability","response","displayDoctorAvailability","data","showDoctorSceduleDTO","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","slot","doc_DateOnly","dateOfWeek","onClick","seduleId","_c","$RefreshReg$"],"sources":["C:/Users/gaura/Music/clinic_frontend/src/components/patient/DoctorAvailability.js"],"sourcesContent":["// DoctorAvailability.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { patientAPi, setAuthToken } from '../../api';\r\nimport { useLocation,useNavigate } from 'react-router-dom';\r\n\r\nconst DoctorAvailability = () => {\r\n  const [availability, setAvailability] = useState([]);\r\n  const location = useLocation(); // Use useLocation hook\r\n  const navigate = useNavigate();\r\n  const { doctorId } = location.state;\r\n\r\n  //console.log('Doctor Id:', doctorId);\r\n  //const { doctorId}= use\r\n\r\n  setAuthToken();\r\n  const handleCheckSlots = (selectedDate) => {\r\n\r\n    navigate('/AllSlots/', { state: { doctorId, date: selectedDate } });\r\n    con\r\n  };\r\n  useEffect(() => {\r\n    const fetchAvailability = async () => {\r\n      try {\r\n\r\n        const response = await patientAPi.displayDoctorAvailability(doctorId);\r\n        setAvailability(response.data.showDoctorSceduleDTO); \r\n        console.log('Availability:', response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching availability:', error);\r\n      }\r\n    };\r\n\r\n    fetchAvailability();\r\n  }, [doctorId]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Doctor Availability</h2>\r\n      {availability.length > 0 ? (\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Date</th>\r\n              <th>Day</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {availability.map((slot) => (\r\n              <tr key={slot.seduleId}>\r\n                <td>{slot.doc_DateOnly}</td>\r\n                <td>{slot.dateOfWeek}</td>\r\n                <td>\r\n                  <button onClick={() => handleCheckSlots(slot.doc_DateOnly)}>\r\n                    Check Slots\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      ) : (\r\n        <p>No availability information available.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoctorAvailability;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}