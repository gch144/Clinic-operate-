{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gaura\\\\Music\\\\clinic_frontend\\\\src\\\\components\\\\doctor\\\\DisplayDoctorAppointments.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { doctorAPi, setAuthToken } from '../../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DisplayDoctorAppointments = () => {\n  _s();\n  const [appointments, setAppointments] = useState([]);\n  const [checkingAppointmentId, setCheckingAppointmentId] = useState(null);\n  const [checkedDescription, setCheckedDescription] = useState('');\n  setAuthToken();\n  const fetchAppointments = async () => {\n    try {\n      const response = await doctorAPi.displayDoctorAppointments();\n      setAppointments(response.data.appointments);\n      console.log('Doctor Appointments:', response.data.appointments);\n    } catch (error) {\n      console.error('Error fetching doctor appointments:', error);\n    }\n  };\n  useEffect(() => {\n    fetchAppointments();\n  }, []);\n  const handleCheckAppointment = appointmentId => {\n    setCheckingAppointmentId(appointmentId);\n    const appointmentToCheck = appointments.find(appointment => appointment.appointmentId === appointmentId);\n    setCheckedDescription(appointmentToCheck.description);\n  };\n  const handleUpdateCheckedAppointment = async () => {\n    try {\n      const updateAppointment = {\n        // Ensure appointmentId is not sent with a value of 0 if it's a new appointment\n        appointmentId: checkingAppointmentId !== 0 ? checkingAppointmentId : undefined,\n        description: checkedDescription\n      };\n      console.log('updateAppointment:', updateAppointment);\n\n      // Make the API request\n      const response = await doctorAPi.checkAppointment(updateAppointment);\n\n      // Log the response data\n      console.log('API Response:', response.data);\n      setCheckingAppointmentId(null);\n      setCheckedDescription('');\n      fetchAppointments();\n      console.log('Appointment checked successfully.');\n    } catch (error) {\n      // Log the error response\n      if (error.response) {\n        console.error('Error checking appointment. Server response:', error.response.data);\n      } else {\n        console.error('Error checking appointment:', error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Appointments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), appointments.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Start Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: appointments.map(appointment => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: appointment.appointmentDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: appointment.startTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: checkingAppointmentId === appointment.appointmentId ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: checkedDescription,\n              onChange: e => setCheckedDescription(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 21\n            }, this) : appointment.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: checkingAppointmentId === appointment.appointmentId ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleUpdateCheckedAppointment,\n              children: \"Save Changes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleCheckAppointment(appointment.appointmentId),\n              children: \"Check Appointment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this)]\n        }, appointment.appointmentId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No appointments available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(DisplayDoctorAppointments, \"+c8Mmy33/N5we87/r3YydhwuxhY=\");\n_c = DisplayDoctorAppointments;\nexport default DisplayDoctorAppointments;\nvar _c;\n$RefreshReg$(_c, \"DisplayDoctorAppointments\");","map":{"version":3,"names":["React","useState","useEffect","doctorAPi","setAuthToken","jsxDEV","_jsxDEV","DisplayDoctorAppointments","_s","appointments","setAppointments","checkingAppointmentId","setCheckingAppointmentId","checkedDescription","setCheckedDescription","fetchAppointments","response","displayDoctorAppointments","data","console","log","error","handleCheckAppointment","appointmentId","appointmentToCheck","find","appointment","description","handleUpdateCheckedAppointment","updateAppointment","undefined","checkAppointment","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","appointmentDate","startTime","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/gaura/Music/clinic_frontend/src/components/doctor/DisplayDoctorAppointments.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { doctorAPi, setAuthToken } from '../../api';\r\n\r\nconst DisplayDoctorAppointments = () => {\r\n  const [appointments, setAppointments] = useState([]);\r\n  const [checkingAppointmentId, setCheckingAppointmentId] = useState(null);\r\n  const [checkedDescription, setCheckedDescription] = useState('');\r\n\r\n  setAuthToken();\r\n\r\n  const fetchAppointments = async () => {\r\n    try {\r\n      const response = await doctorAPi.displayDoctorAppointments();\r\n      setAppointments(response.data.appointments);\r\n      console.log('Doctor Appointments:', response.data.appointments);\r\n    } catch (error) {\r\n      console.error('Error fetching doctor appointments:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchAppointments();\r\n  }, []);\r\n\r\n  const handleCheckAppointment = (appointmentId) => {\r\n    setCheckingAppointmentId(appointmentId);\r\n    const appointmentToCheck = appointments.find(appointment => appointment.appointmentId === appointmentId);\r\n    setCheckedDescription(appointmentToCheck.description);\r\n  };\r\n\r\n  const handleUpdateCheckedAppointment = async () => {\r\n    try {\r\n      const updateAppointment = {\r\n        // Ensure appointmentId is not sent with a value of 0 if it's a new appointment\r\n        appointmentId: checkingAppointmentId !== 0 ? checkingAppointmentId : undefined,\r\n        description: checkedDescription,\r\n      };\r\n  \r\n      console.log('updateAppointment:', updateAppointment);\r\n  \r\n      // Make the API request\r\n      const response = await doctorAPi.checkAppointment(updateAppointment);\r\n  \r\n      // Log the response data\r\n      console.log('API Response:', response.data);\r\n  \r\n      setCheckingAppointmentId(null);\r\n      setCheckedDescription('');\r\n      fetchAppointments();\r\n      console.log('Appointment checked successfully.');\r\n    } catch (error) {\r\n      // Log the error response\r\n      if (error.response) {\r\n        console.error('Error checking appointment. Server response:', error.response.data);\r\n      } else {\r\n        console.error('Error checking appointment:', error);\r\n      }\r\n    }\r\n  };\r\n  \r\n  \r\n\r\n  return (\r\n    <div>\r\n      <h2>Your Appointments</h2>\r\n      {appointments.length > 0 ? (\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Date</th>\r\n              <th>Start Time</th>\r\n              <th>Description</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {appointments.map(appointment => (\r\n              <tr key={appointment.appointmentId}>\r\n                <td>{appointment.appointmentDate}</td>\r\n                <td>{appointment.startTime}</td>\r\n                <td>\r\n                  {checkingAppointmentId === appointment.appointmentId ? (\r\n                    <input\r\n                      type=\"text\"\r\n                      value={checkedDescription}\r\n                      onChange={(e) => setCheckedDescription(e.target.value)}\r\n                    />\r\n                  ) : (\r\n                    appointment.description\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {checkingAppointmentId === appointment.appointmentId ? (\r\n                    <button onClick={handleUpdateCheckedAppointment}>Save Changes</button>\r\n                  ) : (\r\n                    <button onClick={() => handleCheckAppointment(appointment.appointmentId)}>\r\n                      Check Appointment\r\n                    </button>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      ) : (\r\n        <p>No appointments available.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DisplayDoctorAppointments;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,YAAY,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,yBAAyB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACU,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACxE,MAAM,CAACY,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEhEG,YAAY,CAAC,CAAC;EAEd,MAAMW,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMb,SAAS,CAACc,yBAAyB,CAAC,CAAC;MAC5DP,eAAe,CAACM,QAAQ,CAACE,IAAI,CAACT,YAAY,CAAC;MAC3CU,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEJ,QAAQ,CAACE,IAAI,CAACT,YAAY,CAAC;IACjE,CAAC,CAAC,OAAOY,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;IAC7D;EACF,CAAC;EAEDnB,SAAS,CAAC,MAAM;IACda,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,sBAAsB,GAAIC,aAAa,IAAK;IAChDX,wBAAwB,CAACW,aAAa,CAAC;IACvC,MAAMC,kBAAkB,GAAGf,YAAY,CAACgB,IAAI,CAACC,WAAW,IAAIA,WAAW,CAACH,aAAa,KAAKA,aAAa,CAAC;IACxGT,qBAAqB,CAACU,kBAAkB,CAACG,WAAW,CAAC;EACvD,CAAC;EAED,MAAMC,8BAA8B,GAAG,MAAAA,CAAA,KAAY;IACjD,IAAI;MACF,MAAMC,iBAAiB,GAAG;QACxB;QACAN,aAAa,EAAEZ,qBAAqB,KAAK,CAAC,GAAGA,qBAAqB,GAAGmB,SAAS;QAC9EH,WAAW,EAAEd;MACf,CAAC;MAEDM,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAES,iBAAiB,CAAC;;MAEpD;MACA,MAAMb,QAAQ,GAAG,MAAMb,SAAS,CAAC4B,gBAAgB,CAACF,iBAAiB,CAAC;;MAEpE;MACAV,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEJ,QAAQ,CAACE,IAAI,CAAC;MAE3CN,wBAAwB,CAAC,IAAI,CAAC;MAC9BE,qBAAqB,CAAC,EAAE,CAAC;MACzBC,iBAAiB,CAAC,CAAC;MACnBI,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;IAClD,CAAC,CAAC,OAAOC,KAAK,EAAE;MACd;MACA,IAAIA,KAAK,CAACL,QAAQ,EAAE;QAClBG,OAAO,CAACE,KAAK,CAAC,8CAA8C,EAAEA,KAAK,CAACL,QAAQ,CAACE,IAAI,CAAC;MACpF,CAAC,MAAM;QACLC,OAAO,CAACE,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF;EACF,CAAC;EAID,oBACEf,OAAA;IAAA0B,QAAA,gBACE1B,OAAA;MAAA0B,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACzB3B,YAAY,CAAC4B,MAAM,GAAG,CAAC,gBACtB/B,OAAA;MAAA0B,QAAA,gBACE1B,OAAA;QAAA0B,QAAA,eACE1B,OAAA;UAAA0B,QAAA,gBACE1B,OAAA;YAAA0B,QAAA,EAAI;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACb9B,OAAA;YAAA0B,QAAA,EAAI;UAAU;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACnB9B,OAAA;YAAA0B,QAAA,EAAI;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACpB9B,OAAA;YAAA0B,QAAA,EAAI;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACb;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACR9B,OAAA;QAAA0B,QAAA,EACGvB,YAAY,CAAC6B,GAAG,CAACZ,WAAW,iBAC3BpB,OAAA;UAAA0B,QAAA,gBACE1B,OAAA;YAAA0B,QAAA,EAAKN,WAAW,CAACa;UAAe;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACtC9B,OAAA;YAAA0B,QAAA,EAAKN,WAAW,CAACc;UAAS;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAChC9B,OAAA;YAAA0B,QAAA,EACGrB,qBAAqB,KAAKe,WAAW,CAACH,aAAa,gBAClDjB,OAAA;cACEmC,IAAI,EAAC,MAAM;cACXC,KAAK,EAAE7B,kBAAmB;cAC1B8B,QAAQ,EAAGC,CAAC,IAAK9B,qBAAqB,CAAC8B,CAAC,CAACC,MAAM,CAACH,KAAK;YAAE;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxD,CAAC,GAEFV,WAAW,CAACC;UACb;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACL9B,OAAA;YAAA0B,QAAA,EACGrB,qBAAqB,KAAKe,WAAW,CAACH,aAAa,gBAClDjB,OAAA;cAAQwC,OAAO,EAAElB,8BAA+B;cAAAI,QAAA,EAAC;YAAY;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,gBAEtE9B,OAAA;cAAQwC,OAAO,EAAEA,CAAA,KAAMxB,sBAAsB,CAACI,WAAW,CAACH,aAAa,CAAE;cAAAS,QAAA,EAAC;YAE1E;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UACT;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA,GAtBEV,WAAW,CAACH,aAAa;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAuB9B,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,gBAER9B,OAAA;MAAA0B,QAAA,EAAG;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACjC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC5B,EAAA,CA1GID,yBAAyB;AAAAwC,EAAA,GAAzBxC,yBAAyB;AA4G/B,eAAeA,yBAAyB;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}