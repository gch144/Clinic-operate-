{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gaura\\\\Music\\\\clinic_frontend\\\\src\\\\components\\\\patient\\\\SearchDoctor.js\",\n  _s = $RefreshSig$();\n// SearchDoctor.js\nimport React, { useState } from 'react';\nimport { patientAPi, setAuthToken } from \"../../api\";\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst specialties = [{\n  value: 0,\n  label: 'None'\n}, {\n  value: 1,\n  label: 'Home'\n}, {\n  value: 2,\n  label: 'ENT'\n}, {\n  value: 3,\n  label: 'Dermatologist'\n}, {\n  value: 4,\n  label: 'Ophtalmologist'\n}, {\n  value: 5,\n  label: 'Neurologist'\n}, {\n  value: 6,\n  label: 'Orthopedist'\n}, {\n  value: 7,\n  label: 'Pediatrician'\n}];\nconst SearchDoctor = () => {\n  _s();\n  const [specialty, setSpecialty] = useState('');\n  const [doctors, setDoctors] = useState([]);\n  setAuthToken();\n  const handleSearch = async () => {\n    try {\n      // Fetch doctors by specialty\n      const response = await patientAPi.searchDoctor(specialty);\n      setDoctors(response.data.doctorUsers);\n      console.log('Doctors:', response.data);\n      if (response.data.doctorUsers.length === 0) {\n        toast.info('No doctors found for the specified specialty.');\n      }\n    } catch (error) {\n      console.error('Error searching doctors:', error);\n      toast.error('Error searching doctors. Please try again.');\n    }\n  };\n  const handleCheckAvailability = async doctorId => {\n    try {\n      // Fetch doctor availability\n      const response = await patientApi.displayDoctorAvailability(doctorId);\n      // Display availability information (you can customize this part based on your API response)\n      console.log('Doctor Availability:', response.data);\n      toast.success('Availability checked successfully.');\n    } catch (error) {\n      console.error('Error checking availability:', error);\n      toast.error('Error checking availability. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Search Doctors by Specialty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Specialty:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: specialty,\n      onChange: e => setSpecialty(parseInt(e.target.value, 10)),\n      children: specialties.map(spec => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: spec.value,\n        children: spec.label\n      }, spec.value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), doctors.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: doctors.map(doctor => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [doctor.name, \" - \", doctor.specialization]\n        }, doctor.doctorId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchDoctor, \"2aPd4ncUGy7TNXTr6Mz4X54vMdc=\");\n_c = SearchDoctor;\nexport default SearchDoctor;\nvar _c;\n$RefreshReg$(_c, \"SearchDoctor\");","map":{"version":3,"names":["React","useState","patientAPi","setAuthToken","toast","jsxDEV","_jsxDEV","specialties","value","label","SearchDoctor","_s","specialty","setSpecialty","doctors","setDoctors","handleSearch","response","searchDoctor","data","doctorUsers","console","log","length","info","error","handleCheckAvailability","doctorId","patientApi","displayDoctorAvailability","success","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","parseInt","target","map","spec","onClick","doctor","name","specialization","_c","$RefreshReg$"],"sources":["C:/Users/gaura/Music/clinic_frontend/src/components/patient/SearchDoctor.js"],"sourcesContent":["// SearchDoctor.js\r\nimport React, { useState } from 'react';\r\nimport { patientAPi, setAuthToken } from \"../../api\";\r\nimport { toast } from 'react-toastify';\r\nconst specialties = [\r\n    { value: 0, label: 'None' },\r\n    { value: 1, label: 'Home' },\r\n    { value: 2, label: 'ENT' },\r\n    { value: 3, label: 'Dermatologist' },\r\n    { value: 4, label: 'Ophtalmologist' },\r\n    { value: 5, label: 'Neurologist' },\r\n    { value: 6, label: 'Orthopedist' },\r\n    { value: 7, label: 'Pediatrician' },\r\n  ];\r\nconst SearchDoctor = () => {\r\n  const [specialty, setSpecialty] = useState('');\r\n  const [doctors, setDoctors] = useState([]);\r\n  setAuthToken();\r\n\r\n  const handleSearch = async () => {\r\n    try {\r\n      // Fetch doctors by specialty\r\n      const response = await patientAPi.searchDoctor(specialty);\r\n      setDoctors(response.data.doctorUsers);\r\n      console.log('Doctors:', response.data);\r\n\r\n      if (response.data.doctorUsers.length === 0) {\r\n        toast.info('No doctors found for the specified specialty.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error searching doctors:', error);\r\n      toast.error('Error searching doctors. Please try again.');\r\n    }\r\n  };\r\n  const handleCheckAvailability = async (doctorId) => {\r\n    try {\r\n      // Fetch doctor availability\r\n      const response = await patientApi.displayDoctorAvailability(doctorId);\r\n      // Display availability information (you can customize this part based on your API response)\r\n      console.log('Doctor Availability:', response.data);\r\n      toast.success('Availability checked successfully.');\r\n    } catch (error) {\r\n      console.error('Error checking availability:', error);\r\n      toast.error('Error checking availability. Please try again.');\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <h2>Search Doctors by Specialty</h2>\r\n      <label>Specialty:</label>\r\n      <select value={specialty} onChange={(e) => setSpecialty(parseInt(e.target.value, 10))}>\r\n          {specialties.map((spec) => (\r\n            <option key={spec.value} value={spec.value}>\r\n              {spec.label}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      <button onClick={handleSearch}>Search</button>\r\n\r\n      {doctors.length > 0 && (\r\n        <div>\r\n          <h3>Results</h3>\r\n          <ul>\r\n            {doctors.map((doctor) => (\r\n              <li key={doctor.doctorId}>\r\n                {doctor.name} - {doctor.specialization}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchDoctor;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}