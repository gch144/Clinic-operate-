{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gaura\\\\Music\\\\clinic_frontend\\\\src\\\\components\\\\patient\\\\DisplayPatientAppointments.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { patientAPi, setAuthToken } from '../../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DisplayPatientAppointments = () => {\n  _s();\n  const [appointments, setAppointments] = useState([]);\n  setAuthToken();\n  useEffect(() => {\n    const fetchPatientAppointments = async () => {\n      try {\n        const response = await patientAPi.diaplayPatientAppointments();\n        setAppointments(response.data.appointments);\n        console.log('Patient Appointments:', response.data);\n      } catch (error) {\n        console.error('Error fetching patient appointments:', error);\n      }\n    };\n    fetchPatientAppointments();\n  }, []);\n\n  // Function to format the date as \"Day, Month Date, Year\"\n  const formatDate = dateString => {\n    const options = {\n      weekday: 'long',\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Appointments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), appointments.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Appointment Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Day of the Week\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Start Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"End Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: appointments.map(appointment => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: appointment.appointmentDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date(appointment.appointmentDate).toLocaleDateString('en-US', {\n              weekday: 'long'\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: appointment.startTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: appointment.endTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: appointment.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this)]\n        }, appointment.appointmentId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No appointments found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(DisplayPatientAppointments, \"MfWojYlbX9MgZ4Hbt1nSvX/pcQY=\");\n_c = DisplayPatientAppointments;\nexport default DisplayPatientAppointments;\nvar _c;\n$RefreshReg$(_c, \"DisplayPatientAppointments\");","map":{"version":3,"names":["React","useState","useEffect","patientAPi","setAuthToken","jsxDEV","_jsxDEV","DisplayPatientAppointments","_s","appointments","setAppointments","fetchPatientAppointments","response","diaplayPatientAppointments","data","console","log","error","formatDate","dateString","options","weekday","year","month","day","Date","toLocaleDateString","undefined","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","appointment","appointmentDate","startTime","endTime","description","appointmentId","_c","$RefreshReg$"],"sources":["C:/Users/gaura/Music/clinic_frontend/src/components/patient/DisplayPatientAppointments.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { patientAPi, setAuthToken } from '../../api';\r\n\r\nconst DisplayPatientAppointments = () => {\r\n  const [appointments, setAppointments] = useState([]);\r\n\r\n  setAuthToken();\r\n\r\n  useEffect(() => {\r\n    const fetchPatientAppointments = async () => {\r\n      try {\r\n        const response = await patientAPi.diaplayPatientAppointments();\r\n        setAppointments(response.data.appointments);\r\n        console.log('Patient Appointments:', response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching patient appointments:', error);\r\n      }\r\n    };\r\n\r\n    fetchPatientAppointments();\r\n  }, []);\r\n\r\n  // Function to format the date as \"Day, Month Date, Year\"\r\n  const formatDate = (dateString) => {\r\n    const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\r\n    return new Date(dateString).toLocaleDateString(undefined, options);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Your Appointments</h2>\r\n      {appointments.length > 0 ? (\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Appointment Date</th>\r\n              <th>Day of the Week</th>\r\n              <th>Start Time</th>\r\n              <th>End Time</th>\r\n              <th>Description</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {appointments.map((appointment) => (\r\n              <tr key={appointment.appointmentId}>\r\n                <td>{(appointment.appointmentDate)}</td>\r\n                <td>{new Date(appointment.appointmentDate).toLocaleDateString('en-US', { weekday: 'long' })}</td>\r\n                <td>{appointment.startTime}</td>\r\n                <td>{appointment.endTime}</td>\r\n                <td>{appointment.description}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      ) : (\r\n        <p>No appointments found.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DisplayPatientAppointments;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}