{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gaura\\\\Music\\\\clinic_frontend\\\\src\\\\components\\\\admin\\\\CreateDoctorSchedule.js\",\n  _s = $RefreshSig$();\n// CreateDoctorSchedule.js\nimport React, { useState } from 'react';\nimport { adminApi, setAuthToken } from '../../api';\nimport { useLocation } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateDoctorSchedule = ({\n  onCreateSchedule\n}) => {\n  _s();\n  const [scheduleData, setScheduleData] = useState({\n    DoctorId: '',\n    Date_DateOnly: '',\n    StartTime_TimeOnly: '',\n    EndTime_TimeOnly: ''\n  });\n  const location = useLocation();\n  const {\n    doctorId\n  } = location.state;\n  scheduleData.DoctorId = doctorId;\n  const handleChange = e => {\n    setScheduleData({\n      ...scheduleData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setAuthToken();\n    if (!scheduleData.Date_DateOnly || !scheduleData.StartTime_TimeOnly || !scheduleData.EndTime_TimeOnly) {\n      alert('All fields are required.');\n      return;\n    }\n    const currentDate = new Date();\n    const selectedDate = new Date(scheduleData.Date_DateOnly + 'T' + scheduleData.StartTime_TimeOnly);\n    if (selectedDate < currentDate) {\n      alert('Please select a date and time in the future.');\n      return;\n    }\n    if (scheduleData.StartTime_TimeOnly >= scheduleData.EndTime_TimeOnly) {\n      alert('End time must be after start time.');\n      return;\n    }\n    try {\n      const response = await adminApi.createDoctorSchedule(scheduleData);\n      // Handle success\n      alert('Doctor schedule created successfully.');\n      console.log('API Response:', response.data);\n      // Optionally, you can perform additional actions after successful schedule creation\n    } catch (error) {\n      // Handle failure\n      console.error('Error creating doctor schedule:', error);\n      if (error.response) {\n        // The request was made, but the server responded with a status code outside the 2xx range\n        if (error.response.data.message === 'The doctor already has a schedule at the specified time.') {\n          toast.error('The doctor already has a schedule at the specified time.');\n        } else {\n          alert(`Error: ${error.response.data.message}`);\n          console.log('Server Response:', error.response.data);\n        }\n      } else if (error.request) {\n        // The request was made but no response was received\n        alert('Error: No response from the server.');\n      } else {\n        // Something happened in setting up the request that triggered an Error\n        alert(`Error: ${error.message}`);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create Doctor Schedule\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        name: \"Date_DateOnly\",\n        value: scheduleData.Date_DateOnly,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Start Time:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"time\",\n        name: \"StartTime_TimeOnly\",\n        value: scheduleData.StartTime_TimeOnly,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"End Time:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"time\",\n        name: \"EndTime_TimeOnly\",\n        value: scheduleData.EndTime_TimeOnly,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Schedule\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateDoctorSchedule, \"ED4M1L5WJgdzawQsUiLLUeZteqU=\", false, function () {\n  return [useLocation];\n});\n_c = CreateDoctorSchedule;\nexport default CreateDoctorSchedule;\nvar _c;\n$RefreshReg$(_c, \"CreateDoctorSchedule\");","map":{"version":3,"names":["React","useState","adminApi","setAuthToken","useLocation","toast","jsxDEV","_jsxDEV","CreateDoctorSchedule","onCreateSchedule","_s","scheduleData","setScheduleData","DoctorId","Date_DateOnly","StartTime_TimeOnly","EndTime_TimeOnly","location","doctorId","state","handleChange","e","target","name","value","handleSubmit","preventDefault","alert","currentDate","Date","selectedDate","response","createDoctorSchedule","console","log","data","error","message","request","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","_c","$RefreshReg$"],"sources":["C:/Users/gaura/Music/clinic_frontend/src/components/admin/CreateDoctorSchedule.js"],"sourcesContent":["// CreateDoctorSchedule.js\r\nimport React, { useState } from 'react';\r\nimport { adminApi, setAuthToken } from '../../api';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst CreateDoctorSchedule = ({ onCreateSchedule }) => {\r\n  const [scheduleData, setScheduleData] = useState({\r\n    DoctorId: '',\r\n    Date_DateOnly: '',\r\n    StartTime_TimeOnly: '',\r\n    EndTime_TimeOnly: '',\r\n  });\r\n\r\n  const location = useLocation();\r\n  const { doctorId } = location.state;\r\n  scheduleData.DoctorId = doctorId;\r\n\r\n  const handleChange = (e) => {\r\n    setScheduleData({\r\n      ...scheduleData,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    setAuthToken();\r\n\r\n    if (!scheduleData.Date_DateOnly || !scheduleData.StartTime_TimeOnly || !scheduleData.EndTime_TimeOnly) {\r\n      alert('All fields are required.');\r\n      return;\r\n    }\r\n\r\n    const currentDate = new Date();\r\n    const selectedDate = new Date(scheduleData.Date_DateOnly + 'T' + scheduleData.StartTime_TimeOnly);\r\n\r\n    if (selectedDate < currentDate) {\r\n      alert('Please select a date and time in the future.');\r\n      return;\r\n    }\r\n\r\n    if (scheduleData.StartTime_TimeOnly >= scheduleData.EndTime_TimeOnly) {\r\n      alert('End time must be after start time.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await adminApi.createDoctorSchedule(scheduleData);\r\n      // Handle success\r\n      alert('Doctor schedule created successfully.');\r\n      console.log('API Response:', response.data);\r\n      // Optionally, you can perform additional actions after successful schedule creation\r\n    } catch (error) {\r\n      // Handle failure\r\n      console.error('Error creating doctor schedule:', error);\r\n    \r\n      if (error.response) {\r\n        // The request was made, but the server responded with a status code outside the 2xx range\r\n        if (error.response.data.message === 'The doctor already has a schedule at the specified time.') {\r\n          toast.error('The doctor already has a schedule at the specified time.');\r\n        } else {\r\n          alert(`Error: ${error.response.data.message}`);\r\n          console.log('Server Response:', error.response.data);\r\n        }\r\n      } else if (error.request) {\r\n        // The request was made but no response was received\r\n        alert('Error: No response from the server.');\r\n      } else {\r\n        // Something happened in setting up the request that triggered an Error\r\n        alert(`Error: ${error.message}`);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Create Doctor Schedule</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>Date:</label>\r\n        <input\r\n          type=\"date\"\r\n          name=\"Date_DateOnly\"\r\n          value={scheduleData.Date_DateOnly}\r\n          onChange={handleChange}\r\n        />\r\n        <br />\r\n\r\n        <label>Start Time:</label>\r\n        <input\r\n          type=\"time\"\r\n          name=\"StartTime_TimeOnly\"\r\n          value={scheduleData.StartTime_TimeOnly}\r\n          onChange={handleChange}\r\n        />\r\n        <br />\r\n\r\n        <label>End Time:</label>\r\n        <input\r\n          type=\"time\"\r\n          name=\"EndTime_TimeOnly\"\r\n          value={scheduleData.EndTime_TimeOnly}\r\n          onChange={handleChange}\r\n        />\r\n        <br />\r\n\r\n        <button type=\"submit\">Create Schedule</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateDoctorSchedule;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}