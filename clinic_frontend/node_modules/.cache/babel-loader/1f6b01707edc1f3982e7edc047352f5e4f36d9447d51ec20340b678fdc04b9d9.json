{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gaura\\\\Music\\\\clinic_frontend\\\\src\\\\components\\\\auth\\\\Registration.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { MDBBtn, MDBContainer, MDBCard, MDBCardBody, MDBInput, MDBCheckbox } from 'mdb-react-ui-kit';\nimport { authApi } from '../../api';\nimport '../../index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Registration = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordConfirm, setPasswordConfirm] = useState('');\n  const isEmailValid = email => {\n    // Regular expression for a basic email validation\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  };\n  const isPasswordValid = password => {\n    // Regular expression for password validation\n    const passwordRegex = /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*[#$^+=!*()@%&]).{6,}$/;\n    return passwordRegex.test(password);\n  };\n  const handleRegister = async () => {\n    try {\n      // Validation checks\n      if (!name || !username || !email || !password || !passwordConfirm) {\n        toast.warning('All fields are required.');\n        return;\n      }\n      if (!isEmailValid(email)) {\n        toast.warning('Enter a valid email address.');\n        return;\n      }\n      if (!isPasswordValid(password)) {\n        toast.warning('Password must meet the specified criteria.');\n        toast.info('Minimum length 6 and must contain  1 Uppercase,1 lowercase, 1 special character and 1 digit');\n        return;\n      }\n      if (password !== passwordConfirm) {\n        toast.warning('Password and Confirm Password must match.');\n        return;\n      }\n      const registrationData = {\n        name,\n        username,\n        email,\n        password,\n        passwordConfirm\n      };\n      const result = await authApi.register(registrationData);\n      toast.success('Registration successful.');\n      toast.warn('Wait for admin approval');\n      console.log('Registration successful:', result);\n      // Handle successful registration (e.g., show success message, redirect)\n    } catch (error) {\n      console.error('Registration failed:', error);\n      // Handle registration error (e.g., display error message)\n      toast.error('Registration failed. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(MDBContainer, {\n    fluid: true,\n    className: \"d-flex align-items-center justify-content-center bg-image gradient-custom-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mask gradient-custom-3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MDBCard, {\n      className: \"m-5\",\n      style: {\n        maxWidth: '600px'\n      },\n      children: /*#__PURE__*/_jsxDEV(MDBCardBody, {\n        className: \"px-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-uppercase text-center mb-5\",\n          children: \"User R\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n          wrapperClass: \"mb-4\",\n          label: \"Your Name\",\n          size: \"lg\",\n          id: \"form1\",\n          type: \"text\",\n          value: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n          wrapperClass: \"mb-4\",\n          label: \"Usernmae\",\n          size: \"lg\",\n          id: \"form1\",\n          type: \"text\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n          wrapperClass: \"mb-4\",\n          label: \"Your Email\",\n          size: \"lg\",\n          id: \"form2\",\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n          wrapperClass: \"mb-4\",\n          label: \"Password\",\n          size: \"lg\",\n          id: \"form3\",\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n          wrapperClass: \"mb-4\",\n          label: \"Repeat your password\",\n          size: \"lg\",\n          id: \"form4\",\n          type: \"password\",\n          value: passwordConfirm,\n          onChange: e => setPasswordConfirm(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex flex-row justify-content-center mb-4\",\n          children: /*#__PURE__*/_jsxDEV(MDBCheckbox, {\n            name: \"flexCheck\",\n            id: \"flexCheckDefault\",\n            label: \"I agree all statements in Terms of service\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MDBBtn, {\n          className: \"mb-4 w-100 gradient-custom-4\",\n          size: \"lg\",\n          onClick: handleRegister,\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(Registration, \"95PFYfOJt/1ovYrJ3LgW0a0qDUc=\");\n_c = Registration;\nexport default Registration;\nvar _c;\n$RefreshReg$(_c, \"Registration\");","map":{"version":3,"names":["React","useState","toast","MDBBtn","MDBContainer","MDBCard","MDBCardBody","MDBInput","MDBCheckbox","authApi","jsxDEV","_jsxDEV","Registration","_s","name","setName","username","setUsername","email","setEmail","password","setPassword","passwordConfirm","setPasswordConfirm","isEmailValid","emailRegex","test","isPasswordValid","passwordRegex","handleRegister","warning","info","registrationData","result","register","success","warn","console","log","error","fluid","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","maxWidth","wrapperClass","label","size","id","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/gaura/Music/clinic_frontend/src/components/auth/Registration.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport {\r\n    MDBBtn,\r\n    MDBContainer,\r\n    MDBCard,\r\n    MDBCardBody,\r\n    MDBInput,\r\n    MDBCheckbox\r\n  } from 'mdb-react-ui-kit';\r\nimport { authApi } from '../../api';\r\nimport '../../index.css';\r\n\r\nconst Registration = () => {\r\n  const [name, setName] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [passwordConfirm, setPasswordConfirm] = useState('');\r\n\r\n  const isEmailValid = (email) => {\r\n    // Regular expression for a basic email validation\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return emailRegex.test(email);\r\n  };\r\n\r\n  const isPasswordValid = (password) => {\r\n    // Regular expression for password validation\r\n    const passwordRegex = /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*[#$^+=!*()@%&]).{6,}$/;\r\n    return passwordRegex.test(password);\r\n  };\r\n\r\n  const handleRegister = async () => {\r\n    try {\r\n      // Validation checks\r\n      if (!name || !username || !email || !password || !passwordConfirm) {\r\n        toast.warning('All fields are required.');\r\n        return;\r\n      }\r\n\r\n      if (!isEmailValid(email)) {\r\n        toast.warning('Enter a valid email address.');\r\n        return;\r\n      }\r\n\r\n      if (!isPasswordValid(password)) {\r\n        toast.warning('Password must meet the specified criteria.');\r\n        toast.info('Minimum length 6 and must contain  1 Uppercase,1 lowercase, 1 special character and 1 digit');\r\n        return;\r\n      }\r\n\r\n      if (password !== passwordConfirm) {\r\n        toast.warning('Password and Confirm Password must match.');\r\n        return;\r\n      }\r\n\r\n      const registrationData = {\r\n        name,\r\n        username,\r\n        email,\r\n        password,\r\n        passwordConfirm\r\n      };\r\n\r\n      const result = await authApi.register(registrationData);\r\n      toast.success('Registration successful.');\r\n      toast.warn('Wait for admin approval');\r\n      console.log('Registration successful:', result);\r\n      // Handle successful registration (e.g., show success message, redirect)\r\n    } catch (error) {\r\n      console.error('Registration failed:', error);\r\n      // Handle registration error (e.g., display error message)\r\n      toast.error('Registration failed. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MDBContainer fluid className='d-flex align-items-center justify-content-center bg-image gradient-custom-3'>\r\n      <div className='mask gradient-custom-3'></div>\r\n      <MDBCard className='m-5' style={{ maxWidth: '600px' }}>\r\n        <MDBCardBody className='px-5'>\r\n          <h2 className=\"text-uppercase text-center mb-5\">User R</h2>\r\n          <MDBInput wrapperClass='mb-4' label='Your Name' size='lg' id='form1' type='text' value={name} onChange={(e) => setName(e.target.value)} />\r\n          <MDBInput wrapperClass='mb-4' label='Usernmae' size='lg' id='form1' type='text' value={username} onChange={(e) => setUsername(e.target.value)} />\r\n          <MDBInput wrapperClass='mb-4' label='Your Email' size='lg' id='form2' type='email' value={email} onChange={(e) => setEmail(e.target.value)} />\r\n          <MDBInput wrapperClass='mb-4' label='Password' size='lg' id='form3' type='password' value={password} onChange={(e) => setPassword(e.target.value)} />\r\n          <MDBInput wrapperClass='mb-4' label='Repeat your password' size='lg' id='form4' type='password' value={passwordConfirm} onChange={(e) => setPasswordConfirm(e.target.value)} />\r\n          <div className='d-flex flex-row justify-content-center mb-4'>\r\n            <MDBCheckbox name='flexCheck' id='flexCheckDefault' label='I agree all statements in Terms of service' />\r\n          </div>\r\n          <MDBBtn className='mb-4 w-100 gradient-custom-4' size='lg' onClick={handleRegister}>Register</MDBBtn>\r\n        </MDBCardBody>\r\n      </MDBCard>\r\n    </MDBContainer>\r\n  );\r\n};\r\nexport default Registration;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}