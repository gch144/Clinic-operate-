{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gaura\\\\Music\\\\clinic_frontend\\\\src\\\\components\\\\admin\\\\AllDoctors.js\",\n  _s = $RefreshSig$();\n// AllDoctors.js\nimport React, { useEffect, useState } from 'react';\nimport { adminApi, setAuthToken } from '../../api'; // Update the path\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AllDoctors = () => {\n  _s();\n  const [doctors, setDoctors] = useState([]);\n  useEffect(() => {\n    // Set JWT token in headers before making any admin API requests\n    setAuthToken();\n\n    // Fetch the list of all doctors\n    adminApi.getAllDoctors().then(response => {\n      setDoctors(response.data.doctorUsers);\n      console.log('API Response:', response.data.doctorUsers);\n    }).catch(error => {\n      console.error('Error fetching doctors:', error);\n    });\n  }, []); // Make sure to run this effect only once on component mount\n  const handleCreateSchedules = async doctorId => {\n    try {\n      // Use the createDoctorSchedules API function to create schedules for the specified doctor\n      const response = await adminApi.createDoctorSchedules(doctorId);\n\n      // Handle the response as needed\n      console.log('Doctor schedules created successfully:', response.data);\n\n      // You can perform additional actions after successful schedule creation if needed\n    } catch (error) {\n      console.error('Error creating doctor schedules:', error);\n      // Handle the error (display an error message, etc.)\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Doctors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Specialization\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: doctors.map(doctor => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: doctor.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: doctor.specialization\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)]\n        }, doctor.doctorId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(AllDoctors, \"kcw5qKDPTTui1RDpe6DT6D3WwHo=\");\n_c = AllDoctors;\nexport default AllDoctors;\nvar _c;\n$RefreshReg$(_c, \"AllDoctors\");","map":{"version":3,"names":["React","useEffect","useState","adminApi","setAuthToken","jsxDEV","_jsxDEV","AllDoctors","_s","doctors","setDoctors","getAllDoctors","then","response","data","doctorUsers","console","log","catch","error","handleCreateSchedules","doctorId","createDoctorSchedules","children","fileName","_jsxFileName","lineNumber","columnNumber","map","doctor","name","specialization","_c","$RefreshReg$"],"sources":["C:/Users/gaura/Music/clinic_frontend/src/components/admin/AllDoctors.js"],"sourcesContent":["// AllDoctors.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport { adminApi, setAuthToken } from '../../api'; // Update the path\r\n\r\nconst AllDoctors = () => {\r\n  const [doctors, setDoctors] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Set JWT token in headers before making any admin API requests\r\n    setAuthToken();\r\n\r\n    // Fetch the list of all doctors\r\n    adminApi.getAllDoctors()\r\n      .then(response => {\r\n        setDoctors(response.data.doctorUsers\r\n            );\r\n        console.log('API Response:', response.data.doctorUsers\r\n        );\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching doctors:', error);\r\n      });\r\n  }, []); // Make sure to run this effect only once on component mount\r\n  const handleCreateSchedules = async (doctorId) => {\r\n    try {\r\n      // Use the createDoctorSchedules API function to create schedules for the specified doctor\r\n      const response = await adminApi.createDoctorSchedules(doctorId);\r\n\r\n      // Handle the response as needed\r\n      console.log('Doctor schedules created successfully:', response.data);\r\n\r\n      // You can perform additional actions after successful schedule creation if needed\r\n    } catch (error) {\r\n      console.error('Error creating doctor schedules:', error);\r\n      // Handle the error (display an error message, etc.)\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <h2>Doctors</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Specialization</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {doctors.map(doctor => (\r\n            <tr key={doctor.doctorId}>\r\n              <td>{doctor.name}</td>\r\n              <td>{doctor.specialization}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllDoctors;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}