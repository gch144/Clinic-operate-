{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gaura\\\\Music\\\\clinic_frontend\\\\src\\\\components\\\\patient\\\\AllSlots.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { patientAPi, setAuthToken } from '../../api';\nimport { useLocation } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AllSlots = () => {\n  _s();\n  const [availableTimeSlots, setAvailableTimeSlots] = useState([]);\n  const location = useLocation();\n  const {\n    doctorId,\n    doctordate\n  } = location.state;\n  setAuthToken();\n  useEffect(() => {\n    const fetchAvailableTimeSlots = async () => {\n      try {\n        // Fetch available time slots based on doctorId and date\n        const response = await patientAPi.dispalayAvailableSlots(doctorId, doctordate);\n        setAvailableTimeSlots(response.data.availableTimeSlots);\n        console.log('Available Time Slots:', response.data);\n      } catch (error) {\n        console.error('Error fetching available time slots:', error);\n      }\n    };\n    fetchAvailableTimeSlots();\n  }, [doctorId, doctordate]);\n  const handleBookSlot = async (appointmentDate, startTime) => {\n    try {\n      const response = await patientAPi.bookAppointment({\n        doctorId: doctorId,\n        appointmentDate: appointmentDate,\n        startTime_TimeOnly: startTime\n      });\n      console.log('Appointment booked successfully:', response.data);\n      if (response.data.statusCode === 1) {\n        toast.success('Appointment booked successfully.');\n      } else {\n        toast.error('Appointment slot is not available.');\n      }\n    } catch (error) {\n      console.error('Error booking appointment:', error);\n      toast.error('Error booking appointment. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Available Time Slots\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), availableTimeSlots.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Start Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"End Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: availableTimeSlots.map((slot, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: slot.appointmentDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: slot.startTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: slot.endTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleBookSlot(slot.appointmentDate, slot.startTime),\n              children: \"Book Slot\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No available time slots.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(AllSlots, \"MNWtKbelEljBFNebLHEBF7ibDzc=\", false, function () {\n  return [useLocation];\n});\n_c = AllSlots;\nexport default AllSlots;\nvar _c;\n$RefreshReg$(_c, \"AllSlots\");","map":{"version":3,"names":["React","useState","useEffect","patientAPi","setAuthToken","useLocation","toast","jsxDEV","_jsxDEV","AllSlots","_s","availableTimeSlots","setAvailableTimeSlots","location","doctorId","doctordate","state","fetchAvailableTimeSlots","response","dispalayAvailableSlots","data","console","log","error","handleBookSlot","appointmentDate","startTime","bookAppointment","startTime_TimeOnly","statusCode","success","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","slot","index","endTime","onClick","_c","$RefreshReg$"],"sources":["C:/Users/gaura/Music/clinic_frontend/src/components/patient/AllSlots.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { patientAPi, setAuthToken } from '../../api';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nconst AllSlots = () => {\r\n  const [availableTimeSlots, setAvailableTimeSlots] = useState([]);\r\n  const location = useLocation();\r\n  const { doctorId, doctordate } = location.state;\r\n  setAuthToken();\r\n\r\n  useEffect(() => {\r\n    const fetchAvailableTimeSlots = async () => {\r\n      try {\r\n        // Fetch available time slots based on doctorId and date\r\n        const response = await patientAPi.dispalayAvailableSlots(doctorId, doctordate);\r\n        setAvailableTimeSlots(response.data.availableTimeSlots);\r\n        console.log('Available Time Slots:', response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching available time slots:', error);\r\n      }\r\n    };\r\n\r\n    fetchAvailableTimeSlots();\r\n  }, [doctorId, doctordate]);\r\n\r\n  const handleBookSlot = async (appointmentDate, startTime) => {\r\n    try {\r\n      const response = await patientAPi.bookAppointment({\r\n        doctorId: doctorId,\r\n        appointmentDate: appointmentDate,\r\n        startTime_TimeOnly: startTime\r\n      });\r\n\r\n      console.log('Appointment booked successfully:', response.data);\r\n      if (response.data.statusCode === 1) {\r\n        toast.success('Appointment booked successfully.');\r\n      } else {\r\n        toast.error('Appointment slot is not available.');\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('Error booking appointment:', error);\r\n      toast.error('Error booking appointment. Please try again.');\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <h2>Available Time Slots</h2>\r\n      {availableTimeSlots.length > 0 ? (\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Date</th>\r\n              <th>Start Time</th>\r\n              <th>End Time</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {availableTimeSlots.map((slot, index) => (\r\n              <tr key={index}>\r\n                <td>{slot.appointmentDate}</td>\r\n                <td>{slot.startTime}</td>\r\n                <td>{slot.endTime}</td>\r\n                <td>\r\n                  <button onClick={() => handleBookSlot(slot.appointmentDate, slot.startTime)}>\r\n                    Book Slot\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      ) : (\r\n        <p>No available time slots.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllSlots;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}