{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gaura\\\\Music\\\\clinic_frontend\\\\src\\\\api.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { doctorAPi, setAuthToken } from '../../api';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditAppointment = () => {\n  _s();\n  const [appointment, setAppointment] = useState({\n    appointmentId: '',\n    description: ''\n  });\n  const navigate = useNavigate();\n  const location = useLocation();\n  setAuthToken();\n  useEffect(() => {\n    const {\n      state\n    } = location;\n    if (state && state.appointmentId) {\n      // Fetch the specific appointment based on the ID\n      const fetchAppointment = async () => {\n        try {\n          const response = await doctorAPi.getAppointmentById(state.appointmentId);\n          setAppointment({\n            appointmentId: response.data.appointmentId,\n            description: response.data.description\n          });\n        } catch (error) {\n          console.error('Error fetching appointment:', error);\n        }\n      };\n      fetchAppointment();\n    }\n  }, [location]);\n  const handleSaveChanges = async () => {\n    try {\n      await doctorAPi.checkAppointment(appointment);\n      console.log('Appointment updated successfully.');\n      // You can redirect to the doctor appointments page or perform other actions\n      navigate('/display-doctor-appointments');\n    } catch (error) {\n      console.error('Error updating appointment:', error);\n    }\n  };\n  const handleCancel = () => {\n    // Redirect to the doctor appointments page without saving changes\n    navigate('/display-doctor-appointments');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit Appointment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Description:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: appointment.description,\n      onChange: e => setAppointment({\n        ...appointment,\n        description: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSaveChanges,\n      children: \"Save Changes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCancel,\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(EditAppointment, \"OrhiqRs+GCNGtGWgal6Foh3OANE=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = EditAppointment;\nexport default EditAppointment;\nvar _c;\n$RefreshReg$(_c, \"EditAppointment\");","map":{"version":3,"names":["React","useState","useEffect","doctorAPi","setAuthToken","useLocation","useNavigate","jsxDEV","_jsxDEV","EditAppointment","_s","appointment","setAppointment","appointmentId","description","navigate","location","state","fetchAppointment","response","getAppointmentById","data","error","console","handleSaveChanges","checkAppointment","log","handleCancel","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/gaura/Music/clinic_frontend/src/api.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { doctorAPi, setAuthToken } from '../../api';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\n\r\nconst EditAppointment = () => {\r\n  const [appointment, setAppointment] = useState({\r\n    appointmentId: '',\r\n    description: '',\r\n  });\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  setAuthToken();\r\n\r\n  useEffect(() => {\r\n    const { state } = location;\r\n    if (state && state.appointmentId) {\r\n      // Fetch the specific appointment based on the ID\r\n      const fetchAppointment = async () => {\r\n        try {\r\n          const response = await doctorAPi.getAppointmentById(state.appointmentId);\r\n          setAppointment({\r\n            appointmentId: response.data.appointmentId,\r\n            description: response.data.description,\r\n          });\r\n        } catch (error) {\r\n          console.error('Error fetching appointment:', error);\r\n        }\r\n      };\r\n\r\n      fetchAppointment();\r\n    }\r\n  }, [location]);\r\n\r\n  const handleSaveChanges = async () => {\r\n    try {\r\n      await doctorAPi.checkAppointment(appointment);\r\n      console.log('Appointment updated successfully.');\r\n      // You can redirect to the doctor appointments page or perform other actions\r\n      navigate('/display-doctor-appointments');\r\n    } catch (error) {\r\n      console.error('Error updating appointment:', error);\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    // Redirect to the doctor appointments page without saving changes\r\n    navigate('/display-doctor-appointments');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Edit Appointment</h2>\r\n      <label>Description:</label>\r\n      <textarea\r\n        value={appointment.description}\r\n        onChange={(e) => setAppointment({ ...appointment, description: e.target.value })}\r\n      />\r\n      <button onClick={handleSaveChanges}>Save Changes</button>\r\n      <button onClick={handleCancel}>Cancel</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditAppointment;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}